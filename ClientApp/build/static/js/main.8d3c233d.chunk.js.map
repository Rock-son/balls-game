{"version":3,"sources":["HomePage/helpers/simulation/updateSimulation.js","HomePage/helpers/simulation/startSimulation.js","HomePage/helpers/game/updateGame.js","HomePage/helpers/game/startGame.js","HomePage/helpers/actions.js","HomePage/components/SimulationDialog/simulationOptions.js","HomePage/components/SimulationDialog/SimulationDialog.js","HomePage/components/Navbar/Navbar.js","HomePage/components/ShareModal/ShareDialog.js","HomePage/components/GameDialog/gameOptions.js","HomePage/components/GameDialog/GameDialog.js","HomePage/components/QuarantineButtons/QuarantineButtons.js","HomePage/helpers/simulation/simulationState.js","HomePage/helpers/game/gameState.js","HomePage/main.js","App.js","serviceWorker.js","index.js"],"names":["updateSimulation","sprite","spriteArr","circleIntersect","loader","x","radius","window","innerWidth","reactContext","canvasWidth","velocity","y","innerHeight","canvasHeight","state","simulationSettings","contagiousFrom","Date","getTime","contagion","texture","resources","sheet","textures","setState","prevState","contagious","healthy","i","length","myID","otherSprite","simulationRestart","resolveCollision","rotate","angle","Math","cos","sin","particle","otherParticle","xVelocityDiff","yVelocityDiff","atan2","u1","u2","v1","v2","vFinal1","vFinal2","particlePreservedSpeed","preserveSpeed","otherParticlePreservedSpeed","vFinal","newSpeed","sqrt","startSpeed","startSimulation","autostart","this","simulationApp","PIXI","backgroundColor","width","height","resolution","devicePixelRatio","autoDensity","sharedLoader","document","getElementById","appendChild","view","add","on","resource","console","log","progress","name","err","error","load","handleOnImageLoaded","bind","resize","e","renderer","addEventListener","randomIntNumber","min","max","floor","random","x1","y1","r1","x2","y2","r2","size","speed","nrImages","quantity","maxWidth","maxHeight","whiteBall","redBall","j","anchor","randomX","randomY","pow","push","len","index","stage","addChild","ticker","addOnce","updateGame","quarantineArr","quarantineObj","clockTime","gameSettings","isTextSprite","isQuarantineSprite","quarantineDropped","draggedQuarantine","id","isActive","round","dropTime","empty","beginFill","lineStyle","drawCircle","endFill","generateCanvasTexture","alpha","resetDraggedQuarantineId","duration","green","setQuarantineNonactive","difficultyTime","0","1","2","difficulty","randomTimeInSeconds","text","overlap","quarantinesForCheck","filter","quarantine","quarantineOverlapping","red","style","fill","seconds","d","getContagion","gameRestart","particleDistance","xDist","yDist","distance","startGame","gameApp","nrOfQuarantines","timeTextArr","formattedTime","timeText","font","fontFamily","set","randomLength","greenTexture","particleID","tries","isParticleSprite","forEach","item","reduce","acc","obj","Object","assign","availableQuarantines","map","spriteIndex","pause","stop","unPause","start","destroy","sizeOptions","type","value","quantityValues","5","speedOptions","deactivateOptions","booleanOptions","SimulationDialog","nextProps","nextState","isSimulationActive","props","isOpen","buttonText","settings","prevProps","minQuantity","maxQuantity","slice","setSimulationSettings","toggle","deactivateAfter","showTime","showStats","autorestart","Modal","key","centered","fade","className","ModalHeader","charCode","ModalBody","Row","Container","Nav","sizeOption","idx","NavLink","tabIndex","data-option","JSON","stringify","onClick","active","quantityValue","speedOption","deactivateOption","timeOption","statOption","restartOption","ModalFooter","React","Component","NavBar","formattedSeconds","minutes","toggleNavbarItemsExpand","isNavbarExpanded","toggleNavbarVisibility","isNavbarVisible","isGameActive","gamePaused","toggleSimulationDialog","toggleShareDialog","toggleGameDialog","delayInSeconds","currentSeconds","getSeconds","shouldCountdownBeVisible","delayedSeconds","getMinutes","gameStartCountdownTime","Navbar","dark","Button","disabled","strokeWidth","stroke","expand","NavbarToggler","Collapse","navbar","NavItem","data","NavbarText","href","target","rel","ShareDialog","copy","isCopied","role","aria-label","modeOptions","difficultyOptions","quantityDiffVals","speedDiffValues","GameDialog","changedSpeed","setGameSettings","mode","modeOption","difficultyOption","title","QuarantineButtons","quarantineButtonsActive","setQuarantineInMotion","simulationPaused","simulationStopped","simulationSettingsOpen","toggleSimulationPause","unpause","stopStartSimulation","startButtonText","targetData","parsedData","currentTarget","getAttribute","parse","newSimulationSettings","gameStopped","gameSettingsOpen","quarantineBeingDragged","resetSettings","onMouseMove","pageX","pageY","prevstate","stopStartGame","newGameSettings","indexOf","concat","toggleGamePause","HomePage","hasError","currentTime","shareModalOpen","interval","toggleDialog","intervalTime","handleResize","handleBlur","handleRefocus","copyToClipboard","setDriftlessInterval","errorInfo","clearDriftless","setTimeout","navigator","permissions","query","then","result","clipboard","writeText","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.8d3c233d.chunk.js","sourcesContent":["export const updateSimulation = (sprite, spriteArr, circleIntersect, loader) => {\t\r\n\t// X BOUNDARIES\r\n\tif ((sprite.x + sprite.radius) > (window.innerWidth < sprite.reactContext.canvasWidth ? sprite.reactContext.canvasWidth : window.innerWidth )) {\r\n\t\tsprite.velocity.x = -sprite.velocity.x;\r\n\t}\r\n\tif ((sprite.x - sprite.radius) < 0) {\r\n\t\tsprite.velocity.x = -sprite.velocity.x;\r\n\t}\r\n\t// Y BOUNDARIES\r\n\tif ((sprite.y + sprite.radius) > (window.innerHeight < sprite.reactContext.canvasHeight ? sprite.reactContext.canvasHeight : window.innerHeight)) { // resize only up\r\n\t\tsprite.velocity.y = -sprite.velocity.y;\r\n\t}\r\n\tif ((sprite.y - sprite.radius) < 0) {\r\n\t\tsprite.velocity.y = -sprite.velocity.y;\r\n\t}\r\n\t// CALCULATE DEACTIVATION TIME IF APPLIED\r\n\tif (sprite.reactContext.state.simulationSettings[\"deactivateAfter\"] > 0) {\r\n\t\tif (sprite.contagiousFrom && (new Date().getTime() - sprite.contagiousFrom) > sprite.reactContext.state.simulationSettings[\"deactivateAfter\"]) {\r\n\t\t\tsprite.contagion = 0;\r\n\t\t\tsprite.contagiousFrom = null;\r\n\t\t\tsprite.texture = loader.resources.sheet.textures[\"ball-white-15.png\"];\r\n\t\t\tsprite.reactContext.setState(prevState => ({ contagious: prevState.contagious - 1, healthy: prevState.healthy + 1 }));\r\n\t\t}\r\n\t}\r\n\t// CALCULATE COLLISION DETECTION TO ALL OTHER IMAGES\r\n\tfor (let i = 0; i < spriteArr.length; i++) {\r\n\t\tif (sprite.myID === spriteArr[i].myID) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tif (circleIntersect(sprite.x, sprite.y, sprite.radius, spriteArr[i].x, spriteArr[i].y, spriteArr[i].radius)) {\t\t\r\n\t\t\tconst otherSprite = spriteArr[i];\r\n\t\t\t// with deactivation time on, any red can infect another red again\r\n\t\t\tif (sprite.reactContext.state.simulationSettings[\"deactivateAfter\"] > 0 && (otherSprite.contagion || sprite.contagion)) {\r\n\t\t\t\tsprite.contagiousFrom = new Date().getTime();\r\n\t\t\t\totherSprite.contagiousFrom = new Date().getTime();\r\n\t\t\t}\r\n\t\t\t// only calculate crashes where one particle is contagious\r\n\t\t\tif (otherSprite.contagion && !sprite.contagion) {\t\t\t\t\r\n\t\t\t\tsprite.reactContext.setState(prevState => ({ contagious: prevState.contagious + 1, healthy: prevState.healthy - 1 }));\r\n\t\t\t\tsprite.contagion = 1;\r\n\t\t\t\tsprite.texture = loader.resources.sheet.textures[\"ball-red-15.png\"];\r\n\t\t\t\t// ON AUTORESTART=TRUE\r\n\t\t\t\tsprite.reactContext.state.simulationSettings[\"autorestart\"] && sprite.reactContext.state.healthy === 0 && sprite.reactContext.simulationRestart();\t// ON AUTORESTART=TRUE\r\n\t\t\t} else if (sprite.contagion && !otherSprite.contagion) {\r\n\t\t\t\tsprite.reactContext.setState(prevState => ({ contagious: prevState.contagious + 1, healthy: prevState.healthy - 1 }));\r\n\t\t\t\totherSprite.contagion = 1;\r\n\t\t\t\totherSprite.texture = loader.resources.sheet.textures[\"ball-red-15.png\"];\r\n\t\t\t\t// ON AUTORESTART=TRUE\r\n\t\t\t\tsprite.reactContext.state.simulationSettings[\"autorestart\"] && sprite.reactContext.state.healthy === 0 && sprite.reactContext.simulationRestart(); // ON AUTORESTART=TRUE\r\n\t\t\t}\r\n\t\t\tresolveCollision(sprite, otherSprite);\r\n\t\t}\r\n\t}\r\n\r\n\tsprite.x += sprite.velocity.x;\r\n\tsprite.y += sprite.velocity.y;\r\n\r\n}\r\n\r\n/**\r\n * Rotates coordinate system for velocities\r\n *\r\n * Takes velocities and alters them as if the coordinate system they're on was rotated\r\n *\r\n * @param  Object | velocity | The velocity of an individual particle\r\n * @param  Float  | angle    | The angle of collision between two objects in radians\r\n * @return Object | The altered x and y velocities after the coordinate system has been rotated\r\n */\r\nfunction rotate(velocity, angle) {\r\n\tconst rotatedVelocities = {\r\n\t\tx: velocity.x * Math.cos(angle) - velocity.y * Math.sin(angle),\r\n\t\ty: velocity.x * Math.sin(angle) + velocity.y * Math.cos(angle)\r\n\t};\r\n\treturn rotatedVelocities;\r\n}\r\n\r\n/**\r\n * Swaps out two colliding particles' x and y velocities after running through\r\n * an elastic collision reaction equation\r\n *\r\n * @param  Object | particle      | A particle object with x and y coordinates, plus velocity\r\n * @param  Object | otherParticle | A particle object with x and y coordinates, plus velocity\r\n * @return Null | Does not return a value\r\n */\r\n\r\nfunction resolveCollision(particle, otherParticle) {\r\n\tconst xVelocityDiff = particle.velocity.x - otherParticle.velocity.x;\r\n\tconst yVelocityDiff = particle.velocity.y - otherParticle.velocity.y;\r\n\r\n\tconst xDist = otherParticle.x - particle.x;\r\n\tconst yDist = otherParticle.y - particle.y;\r\n\r\n\t// Prevent accidental overlap of images\r\n\tif (xVelocityDiff * xDist + yVelocityDiff * yDist > 0) {\r\n\r\n\t\t// Grab angle between the two colliding images\r\n\t\tconst angle = -Math.atan2(otherParticle.y - particle.y, otherParticle.x - particle.x);\r\n\r\n\t\t// Store mass in var for better readability in collision equation\r\n\t\t// const m1 = particle.mass;\r\n\t\t// const m2 = otherParticle.mass;\r\n\r\n\t\t// Velocity before equation\r\n\t\tconst u1 = rotate(particle.velocity, angle);\r\n\t\tconst u2 = rotate(otherParticle.velocity, angle);\r\n\r\n\t\t// Velocity after 1d collision equation\r\n\t\t// (mass) const v1 = { x: u1.x * (m1 - m2) / (m1 + m2) + u2.x * 2 * m2 / (m1 + m2), y: u1.y };\r\n\t\t// (mass) const v2 = { x: u2.x * (m1 - m2) / (m1 + m2) + u1.x * 2 * m2 / (m1 + m2), y: u2.y };\r\n\t\tconst v1 = { x: u2.x, y: u1.y };\r\n\t\tconst v2 = { x: u1.x, y: u2.y };\r\n\r\n\t\t// Final velocity after rotating axis back to original location\r\n\t\tconst vFinal1 = rotate(v1, -angle);\r\n\t\tconst vFinal2 = rotate(v2, -angle);\r\n\r\n\t\t// PRESERVE SPEED - calculate startSpeed and newSpeed ratio and apply it to particle x and y velocities\r\n\t\tconst particlePreservedSpeed = preserveSpeed(particle, vFinal1);\r\n\t\tconst otherParticlePreservedSpeed = preserveSpeed(otherParticle, vFinal2);\r\n\r\n\t\t// Swap particle velocities for realistic bounce effect\r\n\t\tparticle.velocity.x = particlePreservedSpeed.x;\r\n\t\tparticle.velocity.y = particlePreservedSpeed.y;\r\n\r\n\t\totherParticle.velocity.x = otherParticlePreservedSpeed.x;\r\n\t\totherParticle.velocity.y = otherParticlePreservedSpeed.y;\r\n\t}\r\n}\r\n\r\nfunction preserveSpeed(particle, vFinal) {\r\n\tconst newSpeed = Math.sqrt(vFinal.x * vFinal.x + vFinal.y * vFinal.y);\r\n\t\r\n\treturn { // RETURN SPEED RATIO\r\n\t\tx: vFinal.x * particle.startSpeed / newSpeed,\r\n\t\ty: vFinal.y * particle.startSpeed / newSpeed\r\n\t}\r\n\r\n}\r\n","import { updateSimulation } from \"./updateSimulation\";\r\nimport * as PIXI from \"pixi.js-legacy\";\r\n\r\nexport function startSimulation(autostart, simulationSettings = null) {\r\n\tthis.autostart = autostart || false;\r\n\t// UTILITIES\r\n\r\n\tthis.simulationApp = new PIXI.Application({\r\n\t\tbackgroundColor: 0x000,\r\n\t\twidth: this.canvasWidth,\r\n\t\theight: this.canvasHeight,\r\n\t\tresolution: window.devicePixelRatio || 1,\r\n\t\tautoDensity: true,\r\n\t\tsharedLoader: true\r\n\t});\r\n\tdocument.getElementById(\"canvas-container\").appendChild(this.simulationApp.view);\r\n\r\n\tif (this.simulationApp.loader.resources.sheet == null) {\r\n\t\tthis.simulationApp.loader.add(\"sheet\", \"balls.json\")\r\n\t\t\t.on(\"progress\", (loader, resource) => console.log(loader.progress + \"% loaded\"))\r\n\t\t\t.on(\"load\", (loader, resource) => console.log(\"Asset loaded\" + resource.name))\r\n\t\t\t.on(\"error\", err => console.error(\"load error\", err))\r\n\t\t\t.load(handleOnImageLoaded.bind(this, simulationSettings));\r\n\t} else {\r\n\t\tthis.simulationApp.loader.load(handleOnImageLoaded.bind(this, simulationSettings));\r\n\t}\r\n\r\n\r\n\t// Resize function window\r\n\tconst resize = (e) => {\r\n\t\tif (this.simulationApp) {\r\n\t\t\t// Resize the renderer\r\n\t\t\tthis.simulationApp.renderer.resize(window.innerWidth < this.canvasWidth ? this.canvasWidth : window.innerWidth,\r\n\t\t\t\t\t\t\t\twindow.innerHeight < this.canvasHeight ? this.canvasHeight : window.innerHeight);\r\n\t\t}\r\n\t// You can use the 'screen' property as the renderer visible\r\n\t// area, this is more useful than view.width/height because\r\n\t// it handles resolution\r\n\t//rect.position.set(app.screen.width, app.screen.height);\r\n\t}\r\n\t// Listen for window resize events\r\n\twindow.addEventListener('resize', resize);\r\n}\r\n\r\nfunction randomIntNumber(min, max) {\r\n\treturn Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n/**\r\n * Intersection calculation. Multiplication is much faster than getting the square root with Math.sqrt(), so distance is calculated without getting the root \r\n * and the sum of the radii is multiplied by itself. The outcome stays the same, but the performance is better.\r\n * @param {Float} x1 \r\n * @param {Float} y1 \r\n * @param {Int}   r1 \r\n * @param {Float} x2 \r\n * @param {Float} y2 \r\n * @param {Int}\t  r2 \r\n */\r\nfunction circleIntersect(x1, y1, r1, x2, y2, r2) {\r\n\r\n    // Calculate the distance between the two circles\r\n    var squareDistance = (x1-x2)*(x1-x2) + (y1-y2)*(y1-y2);\r\n\r\n    // When the distance is smaller or equal to the sum\r\n    // of the two radius, the circles touch or overlap\r\n    return squareDistance <= ((r1 + r2) * (r1 + r2))\r\n}\r\n\r\nfunction handleOnImageLoaded(simulationSettings) {\r\n\tconst {\r\n\t\tsize: radius,\r\n\t\tspeed,\r\n\t\tquantity\r\n\t} = simulationSettings == null ? this.state.simulationSettings : simulationSettings;\r\n\t\r\n\tlet contagion, sprite;\r\n\tconst spriteArr = [];\r\n\tconst nrImages = +quantity;\r\n\tconst maxWidth = this.canvasWidth - radius * 2.5;\r\n\tconst maxHeight = this.canvasHeight - radius * 2.5;\r\n\tconst whiteBall = this.simulationApp.loader.resources.sheet.textures[\"ball-white-15.png\"];\r\n\tconst redBall = this.simulationApp.loader.resources.sheet.textures[\"ball-red-15.png\"];\r\n\r\n\tfor (let i = 0; i < nrImages; i++) {\r\n\r\n\t\tcontagion = i === 0 ? 1 : 0;\r\n\t\tlet x = randomIntNumber(radius * 2, maxWidth);\r\n\t\tlet y = randomIntNumber(radius * 2, maxHeight);\r\n\t\tif (i !== 0) {\r\n\t\t\tfor (let j = 0; j < spriteArr.length; j++) {\r\n\t\t\t\tif (circleIntersect(x, y, radius, spriteArr[j].x, spriteArr[j].y, spriteArr[j].radius)) {\t\r\n\t\t\t\t\tx = randomIntNumber(radius * 2, maxWidth);\r\n\t\t\t\t\ty = randomIntNumber(radius * 2, maxHeight);\r\n\t\t\t\t\t// set new x, y recursively\r\n\t\t\t\t\tj = -1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (contagion) {\t\t\t\t\r\n\t\t\tsprite = new PIXI.Sprite(redBall);\r\n\t\t} else {\r\n\t\t\tsprite = new PIXI.Sprite(whiteBall);\r\n\t\t}\r\n\t\tsprite.x = x;\r\n\t\tsprite.y = y;\r\n\t\tsprite.width = radius * 2;\r\n\t\tsprite.height = radius * 2;\r\n\t\tsprite.anchor.x = .5;\r\n\t\tsprite.anchor.y = .5;\r\n\t\tsprite.myID = i;\r\n\t\tsprite.radius = radius;\r\n\t\tsprite.reactContext = this;\r\n\t\tsprite.contagion = contagion;\r\n\t\tsprite.contagiousFrom = null;\r\n\t\tconst randomX = Math.random() - .5;\r\n\t\tconst randomY = Math.random() - .5;\r\n\t\tsprite.velocity = { \r\n\t\t\tx: randomX < 0  && randomX > -.3 ? (randomX*speed) - speed : (randomX > 0  && randomX < .3 ? (randomX) + speed : randomX * speed),\r\n\t\t\ty: randomY < 0  && randomY > -.3 ? (randomY*speed) - speed : (randomY > 0  && randomY < .3 ? (randomY) + speed : randomY * speed),\r\n\t\t};\r\n\t\t\r\n\t\t// calculate starting speed (hypothenuse from x, y)\r\n\t\tsprite.startSpeed = Math.sqrt(Math.pow(sprite.velocity.x, 2) + Math.pow(sprite.velocity.y, 2));\r\n\t\tspriteArr.push(sprite);\r\n\t}\r\n\t\r\n\tconst len = spriteArr.length;\t\r\n\t// draw and animate\r\n\tif (this.autostart) {\r\n\t\tfor (let index = 0; index < len; index++) {\r\n\t\t\tthis.simulationApp.stage.addChild(spriteArr[index]);\r\n\t\t\tthis.simulationApp.ticker.add(updateSimulation.bind(null, spriteArr[index], spriteArr, circleIntersect, this.simulationApp.loader));\r\n\t\t}\r\n\t} else {\r\n\t\tfor (let index = 0; index < len; index++) {\r\n\t\t\tthis.simulationApp.stage.addChild(spriteArr[index]);\r\n\t\t\tthis.simulationApp.ticker.addOnce(updateSimulation.bind(null, spriteArr[index], spriteArr, circleIntersect, this.simulationApp.loader));\r\n\t\t}\r\n\t}\r\n}\r\n\r\n","import * as PIXI from \"pixi.js-legacy\";\r\n\r\nexport const updateGame = (sprite, spriteArr, quarantineArr, quarantineObj, circleIntersect, loader, randomIntNumber) => {\r\n\t// DELAY START TIME\r\n\tif (sprite.reactContext.state.clockTime.getTime() <= sprite.reactContext.state.gameSettings[\"delayInSeconds\"]*1000) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t// DRAG AROUND & CHANGE SIZE - according to number of infections\r\n\tif (( sprite.isTextSprite || sprite.isQuarantineSprite ) && !sprite.reactContext.state.quarantineDropped &&\r\n\t\t( sprite.myID === sprite.reactContext.state.draggedQuarantine.id ||\r\n\t\t  sprite.myID === sprite.reactContext.state.draggedQuarantine.id + quarantineObj.length)) {\r\n\r\n\t\tsprite.isActive = true;\r\n\t\tconst size = 2000 / Math.round(sprite.reactContext.state.gameSettings.quantity / sprite.reactContext.state.contagious);\r\n\t\tif (sprite.isQuarantineSprite) {\r\n\t\t\tsprite.width = size < 150 ? 150: size > 360 ? 360 : size;\r\n\t\t\tsprite.height = size < 150 ? 150: size > 360 ? 360 : size;\r\n\t\t\tsprite.radius = size < 150 ? 75: size > 350 ? 180 : size / 2;\r\n\t\t} else {\r\n\t\t\tsprite.x = sprite.reactContext.state.draggedQuarantine.x;\r\n\t\t\tsprite.y = sprite.reactContext.state.draggedQuarantine.y + 15 - spriteArr[sprite.reactContext.state.draggedQuarantine.id].width / 2;\r\n\t\t}\r\n\t}\r\n\r\n\t// SET DROP TIME - on the exact moment quarantine is dropped\r\n\tif ( sprite.dropTime == null && sprite.reactContext.state.quarantineDropped &&\r\n\t\t( sprite.myID === sprite.reactContext.state.draggedQuarantine.id ||\r\n\t\t  sprite.myID === sprite.reactContext.state.draggedQuarantine.id + quarantineObj.length)) {\r\n\r\n\t\tsprite.dropTime = sprite.reactContext.state.clockTime.getTime();\r\n\t\tif (sprite.isQuarantineSprite ) {\r\n\t\t\tconst empty = new PIXI.Graphics();\r\n\t\t\tempty.beginFill(0x000, 0);\r\n\t\t\tempty.lineStyle(sprite.radius > 300 ? 2.5 : 5,0x85e312,1);\r\n\t\t\tempty.drawCircle(0,0,sprite.radius);\r\n\t\t\tempty.endFill();\r\n\t\t\tsprite.texture = empty.generateCanvasTexture();\r\n\t\t\tsprite.alpha = 1;\r\n\t\t} else if (sprite.reactContext.state.draggedQuarantine.id > -1){\r\n\t\t\tsprite.x = sprite.reactContext.state.draggedQuarantine.x;\r\n\t\t\tsprite.y = sprite.reactContext.state.draggedQuarantine.y + 15 - spriteArr[sprite.reactContext.state.draggedQuarantine.id].width / 2;\r\n\t\t\t// text resets dragedQuarantineId because it calculates later than qurantine\r\n\t\t\tsprite.reactContext.resetDraggedQuarantineId(sprite.reactContext.state.draggedQuarantine.id);\r\n\t\t}\r\n\t}\r\n\r\n\t// HIDE QUARANTINE AND TEXT - when clock goes beyond duration (duration + dropTime)\r\n\tif (sprite.dropTime && (sprite.reactContext.state.clockTime.getTime() - sprite.duration - sprite.dropTime) > 0) {\r\n\t\tsprite.x = -500;\r\n\t\tsprite.y = -500;\r\n\t\tsprite.dropTime = null;\r\n\t\tsprite.isActive = false;\r\n\r\n\t\tif (sprite.isQuarantineSprite) {\r\n\t\t\tconst green = new PIXI.Graphics();\r\n\t\t\tgreen.beginFill();\r\n\t\t\tgreen.lineStyle(5,0x85e312,1);\r\n\t\t\tgreen.drawCircle(0,0,sprite.radius);\r\n\t\t\tgreen.endFill();\r\n\t\t\tsprite.texture = green.generateCanvasTexture();\r\n\t\t\tsprite.alpha = 1;\r\n\t\t\tsprite.reactContext.setQuarantineNonactive(sprite.myID);\r\n\t\t} else {\r\n\t\t\t// this was done in a hurry (repeated in HomePage/helpers/game/startGame.js) - it is only called on quarantine termination\r\n\t\t\tconst difficultyTime = { 0: [15, 25], 1: [15, 20], 2: [10, 15] };\r\n\t\t\tconst difficulty = sprite.reactContext.state.gameSettings[\"difficulty\"];\r\n\t\t\tconst randomTimeInSeconds = Math.round(randomIntNumber(difficultyTime[difficulty][0]*1000, difficultyTime[difficulty][1]*1000) / 1000);\t// make duration a round seconds number\r\n\t\t\tsprite.duration = randomTimeInSeconds * 1000;\r\n\t\t\tsprite.text = `0:${randomTimeInSeconds < 10 ? \"0\" + randomTimeInSeconds + \"\" : randomTimeInSeconds}`;\r\n\t\t}\r\n\t}\r\n\r\n\t// QUARANTINE OVERLAPPING- when quarantine is not dropped, it is not yet being calculated in the collisions\r\n\tif (!sprite.reactContext.state.quarantineDropped && sprite.myID === sprite.reactContext.state.draggedQuarantine.id) {\r\n\t\tsprite.x = sprite.reactContext.state.draggedQuarantine.x;\r\n\t\tsprite.y = sprite.reactContext.state.draggedQuarantine.y;\r\n\t\t// loop through active quarantines and find any intersections\r\n\t\tlet overlap = false;\r\n\t\t// only check active quarantines (they become active at the start of drag)\r\n\t\tconst quarantinesForCheck = quarantineArr.filter(quarantine => quarantine.isActive);\r\n\t\tfor (let index = 0; index < quarantinesForCheck.length; index++) {\r\n\t\t\t// don't check self\r\n\t\t\tif (sprite.myID === quarantinesForCheck[index].myID) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t// calc intersection - break for loop if it intersects\r\n\t\t\tif (circleIntersect(sprite.x, sprite.y, sprite.radius, quarantinesForCheck[index].x, quarantinesForCheck[index].y, quarantinesForCheck[index].radius)) {\r\n\t\t\t\toverlap = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// if quarantine overlaps another and it was not overlapping previously - change texture\r\n\t\tif (overlap && !sprite.reactContext.state.quarantineOverlapping) {\r\n\t\t\tconst red = new PIXI.Graphics();\r\n\t\t\tred.beginFill(0xFF0000, 0.35);\r\n\t\t\tred.drawCircle(0,0,sprite.radius);\r\n\t\t\tred.endFill();\r\n\t\t\tsprite.texture = red.generateCanvasTexture();\r\n\t\t\tsprite.alpha = 1;\r\n\t\t\tspriteArr[sprite.myID + quarantineObj.length].style.fill = 0xFF0000; // set text\r\n\t\t\tsprite.reactContext.setState({ quarantineOverlapping: true });\r\n\t\t}// if quarantine was previously overlapping and it doesn't now - change state\r\n\t\telse if (!overlap && sprite.reactContext.state.quarantineOverlapping) {\r\n\t\t\tconst green = new PIXI.Graphics();\r\n\t\t\tgreen.beginFill(0x85e312, 0.35);\r\n\t\t\tgreen.drawCircle(0,0,sprite.radius);\r\n\t\t\tgreen.endFill();\r\n\t\t\tsprite.texture = green.generateCanvasTexture();\r\n\t\t\tsprite.alpha = 1;\r\n\t\t\tspriteArr[sprite.myID + quarantineObj.length].style.fill = 0x85e312; // set text\r\n\t\t\tsprite.reactContext.setState({ quarantineOverlapping: false });\r\n\t\t}\r\n\t}\r\n\r\n\t// CHANGE TEXT - and stop calculations to avoid collision detection of Text object\r\n\tif (sprite.isTextSprite) {\r\n\t\tif (sprite.dropTime != null) {\r\n\t\t\tconst seconds = (sprite.dropTime + sprite.duration - sprite.reactContext.state.clockTime.getTime()) / 1000;\r\n\t\t\tsprite.text = `0:${seconds < 10 ? \"0\" + seconds : seconds}`;\r\n\t\t}\r\n\t\treturn;\t// Must stop calculating for Text object from now on\r\n\t}\r\n\r\n\t// X BOUNDARIES\r\n\tif ((sprite.x + sprite.radius) > (window.innerWidth < sprite.reactContext.canvasWidth ? sprite.reactContext.canvasWidth : window.innerWidth )) {\r\n\t\tsprite.velocity.x = -sprite.velocity.x;\r\n\t}\r\n\tif ((sprite.x - sprite.radius) < 0) {\r\n\t\tsprite.velocity.x = -sprite.velocity.x;\r\n\t}\r\n\t// Y BOUNDARIES\r\n\tif ((sprite.y + sprite.radius) > (window.innerHeight < sprite.reactContext.canvasHeight ? sprite.reactContext.canvasHeight : window.innerHeight)) { // resize only up\r\n\t\tsprite.velocity.y = -sprite.velocity.y;\r\n\t}\r\n\tif ((sprite.y - sprite.radius) < 0) {\r\n\t\tsprite.velocity.y = -sprite.velocity.y;\r\n\t}\r\n\t/* CALCULATE DEACTIVATION TIME IF APPLIED - MAYBE WILL BE USED FOR PREVOIUS INFECTED - VIOLET\r\n\tif (sprite.reactContext.state.simulationSettings[\"deactivateAfter\"] > 0) {\r\n\t\tif (sprite.contagiousFrom && (sprite.reactContext.state.currentTime - sprite.contagiousFrom > sprite.reactContext.state.simulationSettings[\"deactivateAfter\"])) {\r\n\t\t\tsprite.contagion = 0;\r\n\t\t\tsprite.contagiousFrom = 0;\r\n\t\t\tsprite.texture = loader.resources.sheet.textures[\"ball-white-15.png\"];\r\n\t\t\tsprite.reactContext.setState(prevState => ({ contagious: prevState.contagious - 1, healthy: prevState.healthy + 1 }));\r\n\t\t}\r\n\t}*/\r\n\r\n\t// CALCULATE COLLISION DETECTION WITH QUARANTINE ONLY WHEN DROPPED - when draggedID changes this eval will be false!\r\n\tif (sprite.myID === sprite.reactContext.state.draggedQuarantine.id && !sprite.reactContext.state.quarantineDropped) {\r\n\t\treturn;\r\n\t}\r\n\t// CALCULATE COLLISION DETECTION TO ALL OTHER IMAGES - substract Text objects!\r\n\tfor (let i = 0; i < spriteArr.length - quarantineObj.length; i++) {\r\n\t\t// don't calculate collisions for same objects\r\n\t\tif (sprite.myID === spriteArr[i].myID) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\t// check if distance minus radia is less then 0 --> crash\r\n\t\tif (circleIntersect(sprite.x, sprite.y, sprite.radius, spriteArr[i].x, spriteArr[i].y, spriteArr[i].radius)) {\r\n\t\t\tconst otherSprite = spriteArr[i]\r\n\t\t\t// don't calculate contagion for quarantine particles (which have id > particle quantity)\r\n\t\t\tif (otherSprite.myID < sprite.reactContext.state.gameSettings.quantity && sprite.myID < sprite.reactContext.state.gameSettings.quantity) {\r\n\t\t\t\t// only calculating contagion transmission (one contagious, one healthy)\r\n\t\t\t\tif (otherSprite.contagion && !sprite.contagion) {\r\n\t\t\t\t\tconst d = Math.random();\r\n\t\t\t\t\tif (sprite.reactContext.state.gameSettings[\"difficulty\"] === 2) {\r\n\t\t\t\t\t\t// 100% chance of being here - hard difficulty\r\n\t\t\t\t\t\tgetContagion(sprite, loader);\r\n\t\t\t\t\t} else if (d < 0.5 && sprite.reactContext.state.gameSettings[\"difficulty\"] === 1) {\r\n\t\t\t\t\t\t// 50% chance of being here - medium\r\n\t\t\t\t\t\tgetContagion(sprite, loader);\r\n\t\t\t\t\t} else if (d < 0.67) {\r\n\t\t\t\t\t\t// 17% chance of being here\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// 33% chance of being here - easy\r\n\t\t\t\t\t\tgetContagion(sprite, loader);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (sprite.contagion && !otherSprite.contagion) {\r\n\t\t\t\t\tconst d = Math.random();\r\n\t\t\t\t\tif (sprite.reactContext.state.gameSettings[\"difficulty\"] === 2) {\r\n\t\t\t\t\t\t// 100% chance of being here - hard difficulty\r\n\t\t\t\t\t\tgetContagion(otherSprite, loader);\r\n\t\t\t\t\t} else if (d < 0.5 && sprite.reactContext.state.gameSettings[\"difficulty\"] === 1) {\r\n\t\t\t\t\t\t// 50% chance of being here - medium\r\n\t\t\t\t\t\tgetContagion(otherSprite, loader);\r\n\t\t\t\t\t} else if (d < 0.67) {\r\n\t\t\t\t\t\t// 17% chance of being here\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// 33% chance of being here - easy\r\n\t\t\t\t\t\tgetContagion(otherSprite, loader);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tresolveCollision(sprite, otherSprite, circleIntersect);\r\n\t\t}\r\n\t}\r\n\tsprite.x += sprite.velocity.x;\r\n\tsprite.y += sprite.velocity.y;\r\n}\r\n\r\nfunction getContagion(sprite, loader) {\r\n\tsprite.contagion = 1;\r\n\tsprite.reactContext.setState(prevState => ({ contagious: prevState.contagious + 1, healthy: prevState.healthy - 1 }));\r\n\tsprite.contagiousFrom = new Date().getTime();\r\n\tsprite.texture = loader.resources.sheet.textures[\"ball-red-15.png\"];\r\n\r\n\tif (sprite.reactContext.state.simulationSettings[\"autorestart\"] && sprite.reactContext.state.healthy === 0) {\r\n\t\tsprite.reactContext.gameRestart();\r\n\t}\r\n}\r\n\r\n/**\r\n * Rotates coordinate system for velocities\r\n *\r\n * Takes velocities and alters them as if the coordinate system they're on was rotated\r\n *\r\n * @param  Object | velocity | The velocity of an individual particle\r\n * @param  Float  | angle    | The angle of collision between two objects in radians\r\n * @return Object | The altered x and y velocities after the coordinate system has been rotated\r\n */\r\nfunction rotate(velocity, angle) {\r\n\tconst rotatedVelocities = {\r\n\t\tx: velocity.x * Math.cos(angle) - velocity.y * Math.sin(angle),\r\n\t\ty: velocity.x * Math.sin(angle) + velocity.y * Math.cos(angle)\r\n\t};\r\n\treturn rotatedVelocities;\r\n}\r\n\r\n/**\r\n * Swaps out two colliding particles' x and y velocities after running through\r\n * an elastic collision reaction equation\r\n *\r\n * @param  Object | particle      | A particle object with x and y coordinates, plus velocity\r\n * @param  Object | otherParticle | A particle object with x and y coordinates, plus velocity\r\n * @return Null | Does not return a value\r\n */\r\n\r\nfunction resolveCollision(particle, otherParticle, circleIntersect) {\r\n\tconst quantity = particle.reactContext.state.gameSettings.quantity;\r\n\tlet xVelocityDiff, yVelocityDiff, xDist, yDist;\r\n\r\n\txVelocityDiff = particle.velocity.x - otherParticle.velocity.x;\r\n\tyVelocityDiff = particle.velocity.y - otherParticle.velocity.y;\r\n\r\n\txDist = otherParticle.x - particle.x;\r\n\tyDist = otherParticle.y - particle.y;\r\n\r\n\r\n\r\n\t// Prevent accidental overlap of images - calculate only when objects are moving towards each other\r\n\tif (xVelocityDiff * xDist + yVelocityDiff * yDist > 0 && particle.myID < quantity && otherParticle.myID < quantity) {\r\n\t\t// Grab angle between the two colliding images\r\n\t\tconst angle = -Math.atan2(otherParticle.y - particle.y, otherParticle.x - particle.x);\r\n\r\n\t\t// Store mass in var for better readability in collision equation\r\n\t\t// const m1 = particle.mass;\r\n\t\t// const m2 = otherParticle.mass;\r\n\r\n\t\t// Velocity before equation\r\n\t\tconst u1 = rotate(particle.velocity, angle);\r\n\t\tconst u2 = rotate(otherParticle.velocity, angle);\r\n\r\n\t\t// Velocity after 1d collision equation\r\n\t\t// (mass) const v1 = { x: u1.x * (m1 - m2) / (m1 + m2) + u2.x * 2 * m2 / (m1 + m2), y: u1.y };\r\n\t\t// (mass) const v2 = { x: u2.x * (m1 - m2) / (m1 + m2) + u1.x * 2 * m2 / (m1 + m2), y: u2.y };\r\n\t\tconst v1 = { x: u2.x, y: u1.y };\r\n\t\tconst v2 = { x: u1.x, y: u2.y };\r\n\r\n\t\t// Final velocity after rotating axis back to original location\r\n\t\tconst vFinal1 = rotate(v1, -angle);\r\n\t\tconst vFinal2 = rotate(v2, -angle);\r\n\r\n\t\t// PRESERVE SPEED - calculate startSpeed and newSpeed ratio and apply it to particle x and y velocities\r\n\t\tconst particlePreservedSpeed = preserveSpeed(particle, vFinal1);\r\n\t\tconst otherParticlePreservedSpeed = preserveSpeed(otherParticle, vFinal2);\r\n\r\n\t\t// Swap particle velocities for realistic bounce effect\r\n\t\tparticle.velocity.x = particlePreservedSpeed.x;\r\n\t\tparticle.velocity.y = particlePreservedSpeed.y;\r\n\r\n\t\totherParticle.velocity.x = otherParticlePreservedSpeed.x;\r\n\t\totherParticle.velocity.y = otherParticlePreservedSpeed.y;\r\n\t}\t// QUARANTENE\r\n\telse if (particle.myID >= quantity){\r\n\t\tconst particleDistance = distance(particle.x, particle.y, otherParticle.x, otherParticle.y) - particle.radius + otherParticle.radius;\r\n\t\t// make a border > -2 for outside particles\r\n\t\tif (particleDistance > -4) {\r\n\t\t\totherParticle.velocity.x = -otherParticle.velocity.x;\r\n\t\t\totherParticle.velocity.y = -otherParticle.velocity.y;\r\n\t\t\tparticle.velocity.x = 0;\r\n\t\t\tparticle.velocity.y = 0;\r\n\t\t}\r\n\t\t// border < -2 for inside particles (so inside / outside don+t touch!)\r\n\t\tif (particleDistance > -8 && particleDistance < -4) {\r\n\t\t\totherParticle.velocity.x = -otherParticle.velocity.x;\r\n\t\t\totherParticle.velocity.y = -otherParticle.velocity.y;\r\n\t\t\tparticle.velocity.x = 0;\r\n\t\t\tparticle.velocity.y = 0;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction preserveSpeed(particle, vFinal) {\r\n\t// calculate hypothenuse of the new speed\r\n\tconst newSpeed = Math.sqrt(vFinal.x * vFinal.x + vFinal.y * vFinal.y);\r\n\t// and compare it to the old speed hypothenuse and shorten / prolong x & y with calculated ratio\r\n\treturn {\r\n\t\tx: vFinal.x * particle.startSpeed / newSpeed,\r\n\t\ty: vFinal.y * particle.startSpeed / newSpeed\r\n\t}\r\n}\r\nfunction distance(x1, y1, x2, y2) {\r\n\tconst xDist = x2 - x1;\r\n\tconst yDist = y2 - y1;\r\n\treturn Math.sqrt(xDist * xDist + yDist * yDist);\r\n}\r\nfunction quarantineCollision(particle, otherParticle) {\r\n\tconst angle = -Math.atan2(otherParticle.y - particle.y, otherParticle.x -particle.x);\r\n\r\n\t// Store mass in var for better readability in collision equation\r\n\t// const m1 = particle.mass;\r\n\t// const m2 = otherParticle.mass;\r\n\r\n\t// Velocity before equation\r\n\tconst u2 = rotate(otherParticle.velocity, angle);\r\n\r\n\t// Velocity after 1d collision equation\r\n\tconst v2 = { x: 0, y: u2.y };\r\n\r\n\t// Final velocity after rotating axis back to original location\r\n\tconst vFinal2 = rotate(v2, -angle);\r\n\r\n\t// PRESERVE SPEED - calculate startSpeed and newSpeed ratio and apply it to particle x and y velocities\r\n\tconst otherParticlePreservedSpeed = preserveSpeed(otherParticle, vFinal2);\r\n\r\n\t//\r\n\totherParticle.velocity.x = -otherParticlePreservedSpeed.x;\r\n\totherParticle.velocity.y = -otherParticlePreservedSpeed.y;\r\n}","import { updateGame } from \"./updateGame\";\r\nimport * as PIXI from \"pixi.js-legacy\";\r\n\r\nexport function startGame(autostart, gameSettings = null) {\r\n\tthis.autostart = autostart || false;\r\n\t// UTILITIES\r\n\r\n\tthis.gameApp = new PIXI.Application({\r\n\t\tbackgroundColor: 0x000,\r\n\t\twidth: this.canvasWidth,\r\n\t\theight: this.canvasHeight,\r\n\t\tresolution: window.devicePixelRatio || 1,\r\n\t\tautoDensity: true,\r\n\t\tsharedLoader: true\r\n\t});\r\n\tdocument.getElementById(\"canvas-container\").appendChild(this.gameApp.view);\r\n\r\n\tif (this.gameApp.loader.resources.sheet == null) {\r\n\t\tthis.gameApp.loader\r\n\t\t\t.add(\"sheet\", \"balls.json\")\r\n\t\t\t.on(\"progress\", (loader, resource) => console.log(loader.progress + \"% loaded\"))\r\n\t\t\t.on(\"load\", (loader, resource) => console.log(\"Asset loaded\" + resource.name))\r\n\t\t\t.on(\"error\", err => console.error(\"load error\", err))\r\n\t\t\t.load(handleOnImageLoaded.bind(this, gameSettings));\r\n\t} else {\r\n\t\tthis.gameApp.loader.load(handleOnImageLoaded.bind(this, gameSettings));\r\n\t}\r\n\t// Resize function window\r\n\tconst resize = (e) => {\r\n\t\tif (this.gameApp) {\r\n\t\t\t// Resize the renderer\r\n\t\t\tthis.gameApp.renderer.resize(window.innerWidth < this.canvasWidth ? this.canvasWidth : window.innerWidth,\r\n\t\t\t\t\t\t\t\twindow.innerHeight < this.canvasHeight ? this.canvasHeight : window.innerHeight);\r\n\t\t}\r\n\t// You can use the 'screen' property as the renderer visible\r\n\t// area, this is more useful than view.width/height because\r\n\t// it handles resolution\r\n\t//rect.position.set(app.screen.width, app.screen.height);\r\n\t}\r\n\t// Listen for window resize events\r\n\twindow.addEventListener('resize', resize);\r\n}\r\n\r\nfunction randomIntNumber(min, max) {\r\n\treturn Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\n/**\r\n * Intersection calculation. Multiplication is much faster than getting the square root with Math.sqrt(), so distance is calculated without getting the root\r\n * and the sum of the radii is multiplied by itself. The outcome stays the same, but the performance is better.\r\n * @param {Float} x1\r\n * @param {Float} y1\r\n * @param {Int}   r1\r\n * @param {Float} x2\r\n * @param {Float} y2\r\n * @param {Int}\t  r2\r\n */\r\nfunction circleIntersect(x1, y1, r1, x2, y2, r2) {\r\n\r\n    // Calculate the distance between the two circles\r\n    var squareDistance = (x1-x2)*(x1-x2) + (y1-y2)*(y1-y2);\r\n\r\n    // When the distance is smaller or equal to the sum\r\n    // of the two radius, the circles touch or overlap\r\n    return squareDistance <= ((r1 + r2) * (r1 + r2))\r\n}\r\n\r\nfunction handleOnImageLoaded(gameSettings) {\r\n\tconst {\r\n\t\tsize: radius,\r\n\t\tspeed,\r\n\t\tquantity,\r\n\t\tdifficulty,\r\n\t\tnrOfQuarantines\r\n\t} = gameSettings == null ? this.state.gameSettings : gameSettings;\r\n\r\n\r\n\tconst quarantineArr = [];\r\n\tconst timeTextArr = [];\r\n\tconst difficultyTime = { 0: [15, 25], 1: [15, 20], 2: [10, 15] };\r\n\t// TEXT & QUARANTINES\r\n\tfor (let index = 0; index < nrOfQuarantines; index++) {\r\n\t\tconst randomTimeInSeconds = Math.round(randomIntNumber(difficultyTime[difficulty][0]*1000, difficultyTime[difficulty][1]*1000) / 1000);\t// make duration a round seconds number\r\n\r\n\r\n\t\t// TEXT\r\n\t\tconst formattedTime = `0:${randomTimeInSeconds < 10 ? \"0\" + randomTimeInSeconds + \"\" : randomTimeInSeconds}`;\r\n\t\tconst timeText = new PIXI.Text(formattedTime, {\r\n\t\t\tfill: 0x85e312,\r\n\t\t\tfont: \"18px\",\r\n\t\t\tfontFamily : \"Arial\"\r\n\t\t});\r\n\t\ttimeText.text = formattedTime;\r\n\t\ttimeText.isTextSprite = true;\r\n\t\ttimeText.anchor.set(0.5, 0);\r\n\t\ttimeText.x = -500;\r\n\t\ttimeText.y = -500;\r\n\t\ttimeText.duration = randomTimeInSeconds * 1000;\r\n\t\ttimeText.dropTime = null;\r\n\t\ttimeText.reactContext = this;\r\n\t\ttimeText.isActive = false;\r\n\t\ttimeText.myID = quantity + nrOfQuarantines + index; // text index (calulate existing quarantines)\r\n\r\n\t\t// QUARANTINES\r\n\t\tconst randomLength = randomIntNumber(150, 300);\r\n\t\tconst width = randomLength;\r\n\t\tconst height = randomLength;\r\n\t\tconst radius = randomLength / 2;\r\n\r\n\t\tconst green = new PIXI.Graphics();\r\n\t\tgreen.beginFill(0x85e312, 0.35);\r\n\t\tgreen.drawCircle(0,0,300);\r\n\t\tgreen.endFill();\r\n\t\tconst greenTexture = green.generateCanvasTexture();\r\n\r\n\t\tconst particleID = quantity + index;\r\n\t\tconst quarantine = new PIXI.Sprite(greenTexture);\r\n\t\tquarantine.x = -500;\r\n\t\tquarantine.y = -500;\r\n\t\tquarantine.isQuarantineSprite = true;\r\n\t\tquarantine.isActive = false;\r\n\t\tquarantine.alpha = .5;\r\n\t\tquarantine.duration = randomTimeInSeconds * 1000;\r\n\t\tquarantine.dropTime = null;\r\n\t\tquarantine.width = width;\r\n\t\tquarantine.height = height;\r\n\t\tquarantine.anchor.x = .5;\r\n\t\tquarantine.anchor.y = .5;\r\n\t\tquarantine.myID = particleID;\r\n\t\tquarantine.radius = radius;\r\n\t\tquarantine.reactContext = this;\r\n\t\tquarantine.contagion = 0;\r\n\t\tquarantine.contagiousFrom = null;\r\n\t\tquarantine.velocity = {\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\t\tquarantine.startSpeed = 0;\r\n\t\tquarantineArr.push(quarantine);\r\n\t\ttimeTextArr.push(timeText);\r\n\t}\r\n\r\n\t// PARTICLES\r\n\tlet contagion, sprite;\r\n\tconst spriteArr = [];\r\n\tconst nrImages = +quantity;\r\n\tconst maxWidth = this.canvasWidth - radius * 2.5;\r\n\tconst maxHeight = this.canvasHeight - radius * 2.5;\r\n\tconst whiteBall = this.gameApp.loader.resources.sheet.textures[\"ball-white-15.png\"];\r\n\tconst redBall = this.gameApp.loader.resources.sheet.textures[\"ball-red-15.png\"];\r\n\r\n\tfor (let i = 0; i < nrImages; i++) {\r\n\r\n\t\tcontagion = i === 0 ? 1 : 0;\r\n\t\tlet tries = 0;\r\n\t\tlet x = randomIntNumber(radius * 2, maxWidth);\r\n\t\tlet y = randomIntNumber(radius * 2, maxHeight);\r\n\t\tif (i !== 0) {\r\n\t\t\tfor (let j = 0; j < spriteArr.length; j++) {\r\n\t\t\t\tif (tries > 1000000) {\r\n\t\t\t\t\tbreak; // if the screen is too small, it will go forever - so break and have none and notify user\r\n\t\t\t\t}\r\n\t\t\t\tif (circleIntersect(x, y, radius, spriteArr[j].x, spriteArr[j].y, spriteArr[j].radius)) {\r\n\t\t\t\t\tx = randomIntNumber(radius * 2, maxWidth);\r\n\t\t\t\t\ty = randomIntNumber(radius * 2, maxHeight);\r\n\t\t\t\t\t// set new x, y recursively\r\n\t\t\t\t\tj = -1;\r\n\t\t\t\t\ttries++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (contagion) {\r\n\t\t\tsprite = new PIXI.Sprite(redBall);\r\n\t\t} else {\r\n\t\t\tsprite = new PIXI.Sprite(whiteBall);\r\n\t\t}\r\n\t\tsprite.x = x;\r\n\t\tsprite.y = y;\r\n\t\tsprite.isParticleSprite = true;\r\n\t\tsprite.width = radius * 2;\r\n\t\tsprite.height = radius * 2;\r\n\t\tsprite.anchor.x = .5;\r\n\t\tsprite.anchor.y = .5;\r\n\t\tsprite.myID = i;\r\n\t\tsprite.radius = radius;\r\n\t\tsprite.reactContext = this;\r\n\t\tsprite.contagion = contagion;\r\n\t\tsprite.contagiousFrom = 0;\r\n\t\tconst randomX = Math.random() - .5;\r\n\t\tconst randomY = Math.random() - .5;\r\n\t\tsprite.velocity = {\r\n\t\t\tx: randomX < 0  && randomX > -.3 ? (randomX*speed) - speed : (randomX > 0  && randomX < .3 ? (randomX) + speed : randomX * speed),\r\n\t\t\ty: randomY < 0  && randomY > -.3 ? (randomY*speed) - speed : (randomY > 0  && randomY < .3 ? (randomY) + speed : randomY * speed),\r\n\t\t};\r\n\r\n\t\t// calculate starting speed (hypothenuse from x, y) - optimised (without Math.pow() func)\r\n\t\tsprite.startSpeed = Math.sqrt(sprite.velocity.x * sprite.velocity.x + sprite.velocity.y * sprite.velocity.y);\r\n\t\tspriteArr.push(sprite);\r\n\t}\r\n\r\n\tquarantineArr.forEach(item => spriteArr.push(item));\r\n\ttimeTextArr.forEach(item => spriteArr.push(item));\r\n\r\n\t// construct quarantine and text object\r\n\tconst quarantineObj = quarantineArr.reduce((acc, obj) => Object.assign(acc, {[obj.myID]: obj}), {length: quarantineArr.length})\r\n\r\n\tthis.setState({ availableQuarantines: quarantineArr.map(item => item.myID)});\r\n\tconst len = spriteArr.length;\r\n\t// draw and animate\r\n\tif (this.autostart) {\r\n\t\tfor (let spriteIndex = 0; spriteIndex < len; spriteIndex++) {\r\n\t\t\tthis.gameApp.stage.addChild(spriteArr[spriteIndex]);\r\n\t\t\tthis.gameApp.ticker.add(updateGame.bind(null, spriteArr[spriteIndex], spriteArr, quarantineArr, quarantineObj, circleIntersect, this.gameApp.loader, randomIntNumber));\r\n\t\t}\r\n\t} else {\r\n\t\tfor (let spriteIndex = 0; spriteIndex < len; spriteIndex++) {\r\n\t\t\tthis.gameApp.stage.addChild(spriteArr[spriteIndex]);\r\n\t\t\tthis.gameApp.ticker.addOnce(updateGame.bind(null, spriteArr[spriteIndex], spriteArr, quarantineArr, quarantineObj, circleIntersect, this.gameApp.loader, randomIntNumber));\r\n\t\t}\r\n\t}\r\n}\r\n\r\n","export function pause() {\r\n\tif (this.simulationApp) {\r\n\t\treturn this.simulationApp.ticker.stop();\r\n\t}\r\n\telse if (this.gameApp) {\r\n\t\treturn this.gameApp.ticker.stop();\r\n\r\n\t}\r\n};\r\n\r\nexport function unPause() {\r\n\tif (this.simulationApp) {\r\n\t\treturn this.simulationApp.ticker.start();\r\n\t}\r\n\telse if (this.gameApp) {\r\n\t\treturn this.gameApp.ticker.start();\r\n\t}\r\n};\r\n\r\nexport function stop() {\r\n\tif (this.simulationApp) {\r\n\t\t// https://pixijs.download/dev/docs/PIXI.Application.html#destroy\r\n\t\t// (everything should be destroyed when not needed —> garbage collector)\r\n\t\t// removes children, but leaves canvas element\r\n\t\tthis.simulationApp.destroy(true);\r\n\t\tthis.simulationApp = null;\r\n\t}\r\n\telse if (this.gameApp) {\r\n\t\t// https://pixijs.download/dev/docs/PIXI.Application.html#destroy\r\n\t\t// (everything should be destroyed when not needed —> garbage collector)\r\n\t\t// removes children, but leaves canvas element\r\n\t\tthis.gameApp.destroy(true);\r\n\t\tthis.gameApp = null;\r\n\t}\r\n};\r\n\r\nexport { startSimulation } from \"./simulation/startSimulation\";\r\nexport { startGame } from \"./game/startGame\";","export const sizeOptions = [\r\n\t{ type: \"small\", value: 2.5 },\r\n\t\"|\",\r\n\t{ type: \"medium\", value: 5 },\r\n\t\"|\",\r\n\t{ type: \"large\", value: 7.5 },\r\n];\r\nexport const quantityValues = {\r\n\t\"2.5\": [ 100, \"|\", 200, \"|\", 300, \"|\", 400, \"|\", 500, \"|\", 700, \"|\", 800, \"|\", 1000 ],\r\n\t5: [ 100, \"|\", 200, \"|\", 300, \"|\", 400, \"|\", 500, \"|\", 600, \"|\", 700, \"|\", 800 ],\r\n\t\"7.5\": [  50, \"|\", 100,\"|\", 150, \"|\", 200, \"|\", 300, \"|\", 400, \"|\", 500 ]\r\n};\r\nexport const speedOptions = [\r\n\t{ type: \"slow\", value: .3 },\r\n\t\"|\",\r\n\t{ type: \"medium\", value: .6 },\r\n\t\"|\",\r\n\t{ type: \"fast\", value: 1 },\r\n];\r\nexport const deactivateOptions = [\r\n\t0,\r\n\t\"|\",\r\n\t10000,\r\n\t\"|\",\r\n\t15000,\r\n\t\"|\",\r\n\t20000,\r\n\t\"|\",\r\n\t30000,\r\n\t\"|\",\r\n\t45000,\r\n\t\"|\",\r\n\t60000\r\n];\r\nexport const booleanOptions = [\r\n\t{ type: \"yes\", value: true },\r\n\t\"|\",\r\n\t{ type: \"no\", value: false }\r\n];","import React from \"react\";   \r\nimport { Row, Modal, ModalHeader, ModalBody, ModalFooter, \r\n\t\tContainer, Nav, NavLink } from \"reactstrap\";\r\n\r\nimport { sizeOptions, quantityValues, speedOptions, deactivateOptions, booleanOptions } from \"./simulationOptions\";\r\nimport \"./simulationDialog.scss\";\r\n\r\nexport class SimulationDialog extends React.Component {\r\n\r\n\tshouldComponentUpdate(nextProps, nextState) {\r\n\t\t// starightforward - in case simulation is active, this component should not update\r\n\t\tif (!nextProps.isSimulationActive) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (this.props.isOpen !== nextProps.isOpen || this.props.buttonText !== nextProps.buttonText) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (this.props.settings[\"size\"] !== nextProps.settings[\"size\"] ||\r\n\t\t\tthis.props.settings[\"speed\"] !== nextProps.settings[\"speed\"] ||\r\n\t\t\tthis.props.settings[\"quantity\"] !== nextProps.settings[\"quantity\"] ||\r\n\t\t\tthis.props.settings[\"deactivateAfter\"] !== nextProps.settings[\"deactivateAfter\"] ||\r\n\t\t\tthis.props.settings[\"showTime\"] !== nextProps.settings[\"showTime\"] ||\r\n\t\t\tthis.props.settings[\"showStats\"] !== nextProps.settings[\"showStats\"] ||\r\n\t\t\tthis.props.settings[\"autorestart\"] !== nextProps.settings[\"autorestart\"]\r\n\t\t\t) {\r\n\t\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\t// in case simulation is active, this component should not trigger update\r\n\t\tif (!this.props.isSimulationActive) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tconst minQuantity = quantityValues[this.props.settings.size][0] || 0;\r\n\t\tconst maxQuantity = quantityValues[this.props.settings.size].slice(-1)[0] || 1000;\r\n\t\t// if quantity is greater or smaller than it should be according to size\r\n\t\tif (this.props.settings.quantity > maxQuantity ) {\r\n\t\t\treturn this.props.setSimulationSettings({ quantity: maxQuantity });\r\n\t\t}\r\n\t\tif (this.props.settings.quantity < minQuantity ) {\r\n\t\t\treturn this.props.setSimulationSettings({ quantity: minQuantity });\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tconst { isOpen, toggle, startSimulation, buttonText, setSimulationSettings, \r\n\t\t\t\t\tsettings: { size, speed, quantity, deactivateAfter, showTime, showStats, autorestart} } = this.props;\r\n\r\n\t\treturn (\t\t\r\n\t\t\t<Modal key=\"simulator\" isOpen={isOpen} toggle={toggle} centered={true} fade={true} className=\"simulator-modal\">\r\n\t\t\t\t<ModalHeader charCode=\"X\" toggle={toggle}></ModalHeader>\r\n\t\t\t\t<ModalBody>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Container className=\"choice\">\r\n\t\t\t\t\t\t\t<div>Size of balls</div>\r\n\t\t\t\t\t\t\t<Nav className=\"choice__options\">\r\n\t\t\t\t\t\t\t\t{sizeOptions.map((sizeOption, idx) => {\r\n\t\t\t\t\t\t\t\t\tif (typeof sizeOption != \"object\") {\r\n\t\t\t\t\t\t\t\t\t\treturn <NavLink className=\"disabled\" key={idx}>{sizeOption}</NavLink>;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\treturn \t<NavLink \r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttabIndex=\"0\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata-option={`${JSON.stringify({size: sizeOption.value})}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={setSimulationSettings}\r\n\t\t\t\t\t\t\t\t\t\t\t\tactive={sizeOption.value === size}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{sizeOption.type}\r\n\t\t\t\t\t\t\t\t\t\t\t</NavLink>;\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Container className=\"choice\">\r\n\t\t\t\t\t\t\t<div>Number of balls</div>\r\n\t\t\t\t\t\t\t<Nav className=\"choice__options\">\r\n\t\t\t\t\t\t\t\t{quantityValues[size].map((quantityValue, idx) => {\r\n\t\t\t\t\t\t\t\t\tif (quantityValue === \"|\") {\r\n\t\t\t\t\t\t\t\t\t\treturn <NavLink className=\"disabled\" key={idx}>{quantityValue}</NavLink>;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\treturn \t<NavLink \r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttabIndex=\"0\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata-option={`${JSON.stringify({quantity: quantityValue})}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={setSimulationSettings}\r\n\t\t\t\t\t\t\t\t\t\t\t\tactive={quantityValue === quantity}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{quantityValue}\r\n\t\t\t\t\t\t\t\t\t\t\t</NavLink>;\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</Nav>\t\t\t\t\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Container className=\"choice\">\r\n\t\t\t\t\t\t\t<div>Speed of balls</div>\r\n\t\t\t\t\t\t\t<Nav className=\"choice__options\">\r\n\t\t\t\t\t\t\t\t{speedOptions.map((speedOption, idx) => {\r\n\t\t\t\t\t\t\t\t\tif (typeof speedOption != \"object\") {\r\n\t\t\t\t\t\t\t\t\t\treturn <NavLink className=\"disabled\" key={idx}>{speedOption}</NavLink>;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\treturn\t<NavLink \r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttabIndex=\"0\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tdata-option={`${JSON.stringify({speed: speedOption.value})}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={setSimulationSettings}\r\n\t\t\t\t\t\t\t\t\t\t\t\tactive={speedOption.value === speed}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{speedOption.type}\r\n\t\t\t\t\t\t\t\t\t\t\t</NavLink>;\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Container className=\"choice\">\r\n\t\t\t\t\t\t\t<div>Deactivate ball after</div>\r\n\t\t\t\t\t\t\t<Nav className=\"choice__options\">\r\n\t\t\t\t\t\t\t\t{deactivateOptions.map((deactivateOption, idx) => {\r\n\t\t\t\t\t\t\t\t\tif (deactivateOption === \"|\") {\r\n\t\t\t\t\t\t\t\t\t\treturn <NavLink className=\"disabled\" key={idx}>{deactivateOption}</NavLink>;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\treturn \t<NavLink \r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttabIndex=\"0\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tdata-option={`${JSON.stringify({deactivateAfter: deactivateOption})}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={setSimulationSettings}\r\n\t\t\t\t\t\t\t\t\t\t\t\tactive={deactivateOption === deactivateAfter}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{deactivateOption === 0 ? \"no\" : `${deactivateOption/1000}s`}\r\n\t\t\t\t\t\t\t\t\t\t\t</NavLink>;\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</Nav>\t\t\t\t\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t</Row>\t\t\t\t\r\n\t\t\t\t\t<Row className=\"col-12\">\r\n\t\t\t\t\t\t<Container className=\"col-4 choice\">\r\n\t\t\t\t\t\t\t<div>Show time</div>\r\n\t\t\t\t\t\t\t<Nav className=\"choice__options\">\r\n\t\t\t\t\t\t\t\t{booleanOptions.map((timeOption, idx) => {\r\n\t\t\t\t\t\t\t\t\tif (typeof timeOption !== \"object\") {\r\n\t\t\t\t\t\t\t\t\t\treturn <NavLink className=\"disabled\" key={idx}>{timeOption}</NavLink>;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\treturn \t<NavLink \r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttabIndex=\"0\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tdata-option={`${JSON.stringify({showTime: timeOption.value})}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={setSimulationSettings}\r\n\t\t\t\t\t\t\t\t\t\t\t\tactive={timeOption.value === showTime}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{timeOption.type}\r\n\t\t\t\t\t\t\t\t\t\t\t</NavLink>;\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t\t<Container className=\"col-4 choice\">\r\n\t\t\t\t\t\t\t<div>Show stats</div>\r\n\t\t\t\t\t\t\t<Nav className=\"choice__options\">\r\n\t\t\t\t\t\t\t\t{booleanOptions.map((statOption, idx) => {\r\n\t\t\t\t\t\t\t\t\tif (typeof statOption !== \"object\") {\r\n\t\t\t\t\t\t\t\t\t\treturn <NavLink className=\"disabled\" key={idx}>{statOption}</NavLink>;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\treturn \t<NavLink \r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={idx} \r\n\t\t\t\t\t\t\t\t\t\t\t\ttabIndex=\"0\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tdata-option={`${JSON.stringify({showStats: statOption.value})}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={setSimulationSettings}\r\n\t\t\t\t\t\t\t\t\t\t\t\tactive={statOption.value === showStats}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{statOption.type}\r\n\t\t\t\t\t\t\t\t\t\t\t</NavLink>;\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t\t<Container className=\"col-4 choice\">\r\n\t\t\t\t\t\t\t<div>Autorestart</div>\r\n\t\t\t\t\t\t\t<Nav className=\"choice__options\">\r\n\t\t\t\t\t\t\t\t{booleanOptions.map((restartOption, idx) => {\r\n\t\t\t\t\t\t\t\t\tif (typeof restartOption !== \"object\") {\r\n\t\t\t\t\t\t\t\t\t\treturn <NavLink className=\"disabled\" key={idx}>{restartOption}</NavLink>;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\treturn \t<NavLink \r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttabIndex=\"0\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tdata-option={`${JSON.stringify({autorestart: restartOption.value})}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={setSimulationSettings}\r\n\t\t\t\t\t\t\t\t\t\t\t\tactive={restartOption.value === autorestart}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{restartOption.type}\r\n\t\t\t\t\t\t\t\t\t\t\t</NavLink>;\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</ModalBody>\r\n\t\t\t\t<ModalFooter onClick={startSimulation} className=\"simulator-modal__footer\">\r\n\t\t\t\t\t&gt;&gt;&gt;&nbsp;&nbsp; {buttonText} &nbsp;&nbsp;&lt;&lt;&lt;\r\n\t\t\t\t</ModalFooter>\r\n\t\t</Modal>\r\n\t)};\r\n};\r\n","import React, { useState } from 'react'\r\nimport { Button, Navbar, Nav, NavbarToggler,\r\n\tCollapse, NavItem, NavLink, NavbarText } from \"reactstrap\";\r\n\r\nimport \"./navbar.scss\";\r\n\r\nexport const NavBar = props => {\r\n\tconst { toggleNavbarItemsExpand, isNavbarExpanded, toggleNavbarVisibility, isNavbarVisible, contagious,\r\n\t\thealthy, isGameActive, gamePaused, toggleSimulationDialog, toggleShareDialog, toggleGameDialog, clockTime,\r\n\t\tsimulationSettings: { showTime, showStats }, gameSettings: { delayInSeconds } } = props;\r\n\r\n\t// count in the in-game start delay\r\n\tlet formattedSeconds, seconds, minutes;\r\n\tconst currentSeconds = clockTime.getSeconds();\r\n\tconst shouldCountdownBeVisible = clockTime.getTime() < 4000;\r\n\r\n\t// this is the only place where seconds are mishandled\r\n\tconst delayedSeconds = (clockTime.getTime() / 1000) - delayInSeconds;\r\n\tif (isGameActive) {\r\n\t\tminutes = delayedSeconds < 4 ? \"0\" : new Date(clockTime.getTime() - delayInSeconds*1000).getMinutes();\r\n\t\tseconds = delayedSeconds % 60;\r\n\t\tformattedSeconds = seconds < 0 ? \"00\" : seconds < 10 ? \"0\" + seconds : seconds;\r\n\t} else {\r\n\t\tminutes = clockTime.getMinutes();\r\n\t\tseconds = currentSeconds;\r\n\t\tformattedSeconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n\t}\r\n\r\n\t// start countdown on game start\r\n\tconst gameStartCountdownTime = (delayedSeconds < 0) ? (-delayedSeconds) : \"\";\r\n\treturn(\r\n\t\t<Navbar dark className={`main__navbar ${!isNavbarVisible && \"hidden\"} d-inline-flex justify-content-between`} >\r\n\t\t\t<Button\r\n\t\t\t\tclassName={`main__navbar__toggler ${isNavbarVisible && \"hidden\"}`}\r\n\t\t\t\tonClick={toggleNavbarVisibility}\r\n\t\t\t\tdisabled={isNavbarVisible}\r\n\t\t\t\t>\r\n\t\t\t\t\t<svg height=\"15\" width=\"20\">\r\n\t\t\t\t\t\t<path d=\"M-2 2 l12 12 M10 15 l12 -13 Z\" fill=\"none\" strokeWidth=\"5\" stroke=\"white\"/>\r\n\t\t\t\t\t</svg>\r\n\t\t\t</Button>\r\n\t\t\t<Navbar dark className=\"col-6 main__navbar__left d-inline-flex justify-content-between\" expand=\"sm\">\r\n\t\t\t\t<NavbarToggler onClick={toggleNavbarItemsExpand} />\r\n\t\t\t\t<Collapse isOpen={isNavbarExpanded} navbar>\r\n\t\t\t\t<Nav className=\"navbar__nav left\" navbar>\r\n\t\t\t\t\t<NavItem>\r\n\t\t\t\t\t\t<NavLink className=\"navbar__nav__link\" onClick={toggleSimulationDialog}>Simulate</NavLink>\r\n\t\t\t\t\t</NavItem>\r\n\t\t\t\t\t<NavItem>\r\n\t\t\t\t\t\t<NavLink className=\"d-none d-sm-block disabled stick\">|</NavLink>\r\n\t\t\t\t\t</NavItem>\r\n\t\t\t\t\t<NavItem>\r\n\t\t\t\t\t\t<NavLink data=\"game\" className=\"navbar__nav__link\" onClick={toggleGameDialog}>Play game</NavLink>\r\n\t\t\t\t\t</NavItem>\r\n\t\t\t\t\t<NavItem>\r\n\t\t\t\t\t\t<NavLink className=\"d-none d-sm-block disabled stick\">|</NavLink>\r\n\t\t\t\t\t</NavItem>\r\n\t\t\t\t\t<NavItem>\r\n\t\t\t\t\t\t<NavLink data=\"game\" className=\"navbar__nav__link\" >Stay Safe</NavLink>\r\n\t\t\t\t\t</NavItem>\r\n\t\t\t\t\t<NavItem>\r\n\t\t\t\t\t\t<NavLink className=\"d-none d-sm-block disabled stick\">|</NavLink>\r\n\t\t\t\t\t</NavItem>\r\n\t\t\t\t\t<NavItem>\r\n\t\t\t\t\t\t<NavLink className=\"navbar__nav__link\" onClick={toggleShareDialog}>Share</NavLink>\r\n\t\t\t\t\t</NavItem>\r\n\t\t\t\t\t<NavItem>\r\n\t\t\t\t\t\t<NavLink className=\"d-none d-sm-block disabled stick\">|</NavLink>\r\n\t\t\t\t\t</NavItem>\r\n\t\t\t\t\t<NavItem>\r\n\t\t\t\t\t\t<NavLink className=\"navbar__nav__link\" >About</NavLink>\r\n\t\t\t\t\t</NavItem>\r\n\t\t\t\t\t<NavItem>\r\n\t\t\t\t\t\t<NavLink className=\"d-none d-sm-block disabled stick\">|</NavLink>\r\n\t\t\t\t\t</NavItem>\r\n\t\t\t\t\t<NavItem>\r\n\t\t\t\t\t\t<NavLink className=\"navbar__nav__link\" onClick={toggleNavbarVisibility}>Hide</NavLink>\r\n\t\t\t\t\t</NavItem>\r\n\t\t\t\t</Nav>\r\n\t\t\t\t</Collapse>\r\n\t\t\t</Navbar>\r\n\t\t\t<Navbar dark className=\"col-6 main__navbar__right d-inline-flex justify-content-between\" >\r\n\t\t\t\t<Nav className=\"navbar__nav caption\" navbar>\r\n\t\t\t\t\t<NavItem>TheCovidSimulator</NavItem>\r\n\t\t\t\t</Nav>\r\n\t\t\t\t<Nav className=\"navbar__nav right\" navbar>\r\n\t\t\t\t\t<NavItem className=\" d-inline-flex justify-content-between\">\r\n\t\t\t\t\t\t<NavbarText className=\"countdown-link\">Stay safe. For more visit&nbsp;</NavbarText>\r\n\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\tclassName=\"countdown-link\"\r\n\t\t\t\t\t\t\thref=\"https://www.countdownkings.com/\"\r\n\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\trel=\"nooperner noreferrer\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tCountdownKings.com\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t</NavItem>\r\n\t\t\t\t\t<NavItem className={`stats ${!isNavbarVisible && \"drop\"}`}>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tshowStats ?\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<NavbarText className=\"stats__infected\">Infected:&nbsp;{contagious}</NavbarText>\r\n\t\t\t\t\t\t\t\t<NavbarText className=\"stats__healthy\">Healthy:&nbsp;{healthy}</NavbarText>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</NavItem>\r\n\t\t\t\t\t<NavItem className={`timer ${!isNavbarVisible && \"drop\"}`}>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tshowTime ? `${minutes}:${formattedSeconds}` : \"\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</NavItem>\r\n\t\t\t\t</Nav>\r\n\t\t\t</Navbar>\r\n\t\t\t<div className={`game-start-countdown ${isGameActive && !gamePaused && shouldCountdownBeVisible ? \"visible\" : \"\"}`}>{gameStartCountdownTime}</div>\r\n\t\t</Navbar>\r\n\t);\r\n};","import React from \"react\";   \r\nimport { Button, Row, Modal, ModalHeader, ModalBody, ModalFooter, \r\n\t\tContainer, NavLink } from \"reactstrap\";\r\n\r\nimport \"./shareDialog.scss\";\r\n\r\nexport const ShareDialog = props => {\r\n\tconst { isOpen, toggle, copy, isCopied } = props;\r\n   \treturn (\r\n\t\t<Modal key=\"sharemodal\" isOpen={isOpen} toggle={toggle} centered={true} className=\"share-modal\">\r\n\t\t\t<ModalHeader charCode=\"X\" toggle={toggle}>\r\n\t\t\t</ModalHeader>\r\n\t\t\t<ModalBody className=\"justify-content-center\">\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Container className=\"share\">\r\n\t\t\t\t\t\tShare with your friends\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Container>\r\n\t\t\t\t\t\thttps://www.covidsimulator.com\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t{ isCopied ?\r\n\t\t\t\t\t\t\t<div className=\"copied__link\">Link copied <span role=\"img\" aria-label=\"smiley face\">&#128515;</span></div> \r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t<Button onClick={copy} >Copy link</Button>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</Row>\r\n\t\t\t</ModalBody>\r\n\t\t\t<ModalFooter>\r\n\t\t\t\t<Container  className=\"col-12 d-inline-flex justify-content-center\">\r\n\t\t\t\t\tFor more visit&nbsp;\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"footer__link\"\r\n\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\trel=\"noopener noreferrer\"\t\t\t\t\t\t\t\r\n\t\t\t\t\t\thref=\"https://www.countdownkings.com\">\r\n\t\t\t\t\t\t\tCountdownKings.com\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t</Container>\r\n\t\t\t</ModalFooter>\r\n\t\t</Modal>\r\n   );\r\n};\r\n","export const modeOptions = [\r\n\t{ type: \"Keep Uninfected\", value: 0 },\r\n\t\"|\",\r\n\t{ type: \"Time Challenge\", value: 1 }\r\n];\r\nexport const difficultyOptions = [\r\n\t{ type: \"Easy\", value: 0 },\r\n\t\"|\",\r\n\t{ type: \"Medium\", value: 1 },\r\n\t\"|\",\r\n\t{ type: \"Hard\", value: 2 },\r\n];\r\nexport const sizeOptions = [\r\n\t{ type: \"Small\", value: 2.5 },\r\n\t\"|\",\r\n\t{ type: \"Medium\", value: 5 },\r\n\t\"|\",\r\n\t{ type: \"Large\", value: 7.5 },\r\n];\r\n// depend on size and difficulty: easy: 0, medium: 1, hard: 2\r\nexport const quantityValues = {\r\n\t\"2.5\": [ 100, \"|\", 200, \"|\", 300, \"|\", 400, \"|\", 500, \"|\", 700, \"|\", 800, \"|\", 1000 ],\r\n\t5: [ 100, \"|\", 200, \"|\", 300, \"|\", 400, \"|\", 500, \"|\", 600, \"|\", 700, \"|\", 800 ],\r\n\t\"7.5\": [  50, \"|\", 100,\"|\", 150, \"|\", 200, \"|\", 300, \"|\", 400, \"|\", 500, \"|\", 600 ]\r\n};\r\nexport const quantityDiffVals = {\r\n\t0: {\r\n\t\t\"2.5\": { min: 100, max: 1000},\r\n\t\t5: { min: 100, max: 800},\r\n\t\t\"7.5\": { min: 50, max: 600},\r\n\t},\r\n\t1: {\r\n\t\t\"2.5\": { min: 300, max: 1000},\r\n\t\t5: { min: 300, max: 800},\r\n\t\t\"7.5\": { min: 150, max: 600},\r\n\t},\r\n\t2: {\r\n\t\t\"2.5\": { min: 700, max: 1000},\r\n\t\t5: { min: 600, max: 800},\r\n\t\t\"7.5\": { min: 300, max: 600},}\r\n}\r\n// depends on difficulty\r\nexport const speedOptions = [\r\n\t{ type: \"Slow\", value: 0.3, difficulty: 0 },\r\n\t\"|\",\r\n\t{ type: \"Medium\", value: .6, difficulty: 1 },\r\n\t\"|\",\r\n\t{ type: \"Fast\", value: 1, difficulty: 2 }\r\n];\r\n\r\nexport const speedDiffValues = {\r\n\t0: .3,\r\n\t1: .6,\r\n\t2: 1\r\n}\r\n","import React from \"react\";   \r\nimport { Row, Modal, ModalHeader, ModalBody, ModalFooter, \r\n\t\tContainer, Nav, NavLink } from \"reactstrap\";\r\n\r\nimport { modeOptions, difficultyOptions, sizeOptions, quantityValues, quantityDiffVals, speedOptions, speedDiffValues } from \"./gameOptions\";\r\nimport \"./gameDialog.scss\";\r\n\r\nexport class GameDialog extends React.Component {\r\n\r\n\tshouldComponentUpdate(nextProps, nextState) {\r\n\t\t// starightforward - in case simulation is active, this component should not update\r\n\t\tif (!nextProps.isGameActive) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (this.props.isOpen !== nextProps.isOpen || this.props.buttonText !== nextProps.buttonText) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (this.props.settings[\"mode\"] !== nextProps.settings[\"mode\"] ||\r\n\t\t\tthis.props.settings[\"difficulty\"] !== nextProps.settings[\"difficulty\"] ||\r\n\t\t\tthis.props.settings[\"size\"] !== nextProps.settings[\"size\"] ||\r\n\t\t\tthis.props.settings[\"quantity\"] !== nextProps.settings[\"quantity\"] ||\r\n\t\t\tthis.props.settings[\"speed\"] !== nextProps.settings[\"speed\"]\r\n\t\t\t) {\r\n\t\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\t// in case simulation is active, this component should not trigger update\r\n\t\tif (!this.props.isGameActive) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tconst minQuantity = (quantityDiffVals[this.props.settings.difficulty][this.props.settings.size] || { min: 0 }).min;\r\n\t\tconst maxQuantity = (quantityDiffVals[this.props.settings.difficulty][this.props.settings.size] || { max: 1000 }).max;\r\n\t\tconst changedSpeed = speedDiffValues[this.props.settings.difficulty];\r\n\t\t// if quantity is greater or smaller than it should be according to size\r\n\t\tif (this.props.settings.quantity > maxQuantity ) {\r\n\t\t\treturn this.props.setGameSettings({ quantity: maxQuantity, speed: changedSpeed });\r\n\t\t}\r\n\t\tif (this.props.settings.quantity < minQuantity ) {\t\t\t\r\n\t\t\treturn this.props.setGameSettings({ quantity: minQuantity, speed: changedSpeed });\r\n\t\t}\r\n\t\t// if min, max values are not a problem, then set speed\r\n\t\tif (this.props.settings.speed !== changedSpeed) {\r\n\t\t\treturn this.props.setGameSettings({ speed: changedSpeed });\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tconst { isOpen, toggle, startGame, buttonText, setGameSettings, \r\n\t\t\t\t\tsettings: { mode, difficulty, size, quantity, speed } } = this.props;\r\n\t\t\r\n\t\treturn (\t\t\r\n\t\t\t<Modal key=\"game\" isOpen={isOpen} toggle={toggle} centered={true} fade={true} className=\"simulator-modal\">\r\n\t\t\t\t<ModalHeader charCode=\"X\" toggle={toggle}></ModalHeader>\r\n\t\t\t\t<ModalBody>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Container className=\"choice\">\r\n\t\t\t\t\t\t\t<div>Game Mode</div>\r\n\t\t\t\t\t\t\t<Nav className=\"choice__options\">\r\n\t\t\t\t\t\t\t\t{modeOptions.map((modeOption, idx) => {\r\n\t\t\t\t\t\t\t\t\tif (typeof modeOption != \"object\") {\r\n\t\t\t\t\t\t\t\t\t\treturn <NavLink className=\"disabled\" key={idx}>{modeOption}</NavLink>;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\treturn \t<NavLink \r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttabIndex=\"0\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata-option={`${JSON.stringify({ mode: modeOption.value })}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={setGameSettings}\r\n\t\t\t\t\t\t\t\t\t\t\t\tactive={modeOption.value === mode}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{modeOption.type}\r\n\t\t\t\t\t\t\t\t\t\t\t</NavLink>;\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Container className=\"choice\">\r\n\t\t\t\t\t\t\t<div>Difficulty level (also affects Quarantine)</div>\r\n\t\t\t\t\t\t\t<Nav className=\"choice__options\">\r\n\t\t\t\t\t\t\t\t{difficultyOptions.map((difficultyOption, idx) => {\r\n\t\t\t\t\t\t\t\t\tif (difficultyOption === \"|\") {\r\n\t\t\t\t\t\t\t\t\t\treturn <NavLink className=\"disabled\" key={idx}>{difficultyOption}</NavLink>;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\treturn \t<NavLink \r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttabIndex=\"0\"\r\n\t\t\t\t\t\t\t\t\t\t\t\ttitle={difficultyOption.value === 0 ? \"33% infection rate\" : difficultyOption.value === 1 ? \"50% infection rate\" : \"100% infection rate\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata-option={`${JSON.stringify({ difficulty: difficultyOption.value })}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={setGameSettings}\r\n\t\t\t\t\t\t\t\t\t\t\t\tactive={difficultyOption.value === difficulty}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{difficultyOption.type}\r\n\t\t\t\t\t\t\t\t\t\t\t</NavLink>;\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</Nav>\t\t\t\t\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Container className=\"choice\">\r\n\t\t\t\t\t\t\t<div>Size of balls</div>\r\n\t\t\t\t\t\t\t<Nav className=\"choice__options\">\r\n\t\t\t\t\t\t\t\t{sizeOptions.map((sizeOption, idx) => {\r\n\t\t\t\t\t\t\t\t\tif (typeof sizeOption != \"object\") {\r\n\t\t\t\t\t\t\t\t\t\treturn <NavLink className=\"disabled\" key={idx}>{sizeOption}</NavLink>;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\treturn\t<NavLink \r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttabIndex=\"0\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tdata-option={`${JSON.stringify({size: sizeOption.value})}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={setGameSettings}\r\n\t\t\t\t\t\t\t\t\t\t\t\tactive={sizeOption.value === size}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{sizeOption.type}\r\n\t\t\t\t\t\t\t\t\t\t\t</NavLink>;\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Container className=\"choice\">\r\n\t\t\t\t\t\t\t<div>Number of balls</div>\r\n\t\t\t\t\t\t\t<Nav className=\"choice__options\">\r\n\t\t\t\t\t\t\t\t{quantityValues[size].map((quantityValue, idx) => {\r\n\t\t\t\t\t\t\t\t\tif (quantityValue === \"|\") {\r\n\t\t\t\t\t\t\t\t\t\treturn <NavLink className=\"disabled\" key={idx}>{quantityValue}</NavLink>;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t// if quantity is outside of min / max values\r\n\t\t\t\t\t\t\t\t\tif ((quantityDiffVals[difficulty][size] && (quantityValue < quantityDiffVals[difficulty][size].min)) ||\r\n\t\t\t\t\t\t\t\t\t\t(quantityDiffVals[difficulty][size] && (quantityValue > quantityDiffVals[difficulty][size].max))\r\n\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\treturn <NavLink disabled={true} key={idx}>{quantityValue}</NavLink>;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\treturn \t<NavLink \r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttabIndex=\"0\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata-option={`${JSON.stringify({quantity: quantityValue})}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={setGameSettings}\r\n\t\t\t\t\t\t\t\t\t\t\t\tactive={quantityValue === quantity}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{quantityValue}\r\n\t\t\t\t\t\t\t\t\t\t\t</NavLink>;\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</Nav>\t\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Container className=\"choice\">\r\n\t\t\t\t\t\t\t<div>Speed of balls</div>\r\n\t\t\t\t\t\t\t<Nav className=\"choice__options\">\r\n\t\t\t\t\t\t\t\t{speedOptions.map((speedOption, idx) => {\r\n\t\t\t\t\t\t\t\t\tif (typeof speedOption != \"object\") {\r\n\t\t\t\t\t\t\t\t\t\treturn <NavLink className=\"disabled\" key={idx}>{speedOption}</NavLink>;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif (speedOption.difficulty !== difficulty ) {\r\n\t\t\t\t\t\t\t\t\t\treturn <NavLink className=\"disabled\" key={idx}>{speedOption.type}</NavLink>;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\treturn\t<NavLink \r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttabIndex=\"0\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tdata-option={`${JSON.stringify({speed: speedOption.value})}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={setGameSettings}\r\n\t\t\t\t\t\t\t\t\t\t\t\tactive={speedOption.value === speed}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{speedOption.type}\r\n\t\t\t\t\t\t\t\t\t\t\t</NavLink>;\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</ModalBody>\r\n\t\t\t\t<ModalFooter onClick={startGame} className=\"simulator-modal__footer\">\r\n\t\t\t\t\t&gt;&gt;&gt;&nbsp;&nbsp; {buttonText} &nbsp;&nbsp;&lt;&lt;&lt;\r\n\t\t\t\t</ModalFooter>\r\n\t\t</Modal>\r\n\t)};\r\n};\r\n","import React from \"react\";   \r\nimport { Button } from \"reactstrap\";\r\n\r\nimport \"./quarantineButtons.scss\";\r\n\r\nexport class QuarantineButtons extends React.Component {\r\n\r\n\tshouldComponentUpdate(nextProps, nextState) {\r\n\t\tif (nextProps.quarantineButtonsActive !== this.props.quarantineButtonsActive) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t// TODO: all logic for button handling!\r\n\r\n\trender() {\r\n\t\tconst { quarantineButtonsActive, setQuarantineInMotion } = this.props;\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tonClick={setQuarantineInMotion}\r\n\t\t\t\t\tclassName={`btn btn-success quarantine__btn quarantine__btn--left-top ${!quarantineButtonsActive && \"disabled\"}`}>\r\n\t\t\t\t\t\tQuarantine\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tonClick={setQuarantineInMotion}\r\n\t\t\t\t\tclassName={`btn btn-success quarantine__btn quarantine__btn--left-bottom ${!quarantineButtonsActive && \"disabled\"}`}>\r\n\t\t\t\t\t\tQuarantine\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tonClick={setQuarantineInMotion}\r\n\t\t\t\t\tclassName={`btn btn-success quarantine__btn quarantine__btn--right-top ${!quarantineButtonsActive && \"disabled\"}`}>\r\n\t\t\t\t\t\tQuarantine\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tonClick={setQuarantineInMotion}\r\n\t\t\t\t\tclassName={`btn btn-success quarantine__btn quarantine__btn--right-bottom ${!quarantineButtonsActive && \"disabled\"}`}>\r\n\t\t\t\t\t\tQuarantine\r\n\t\t\t\t</Button>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}","export const simulationSettings = {\r\n\tisSimulationActive: true,\r\n\t// canvas state\r\n\tsimulationPaused: false,\r\n\tsimulationStopped: false,\r\n\t// modals - popups\r\n\tsimulationSettingsOpen: false,\r\n\t// SETTINGS\r\n\tsimulationSettings: {\r\n\t\tsize: (window.innerWidth < 800 ? 2.5 : 5),\r\n\t\tspeed: 1,\r\n\t\tquantity: 200,\r\n\t\tdeactivateAfter: 0,\r\n\t\tshowTime: true,\r\n\t\tshowStats: true,\r\n\t\tautorestart: true\r\n\t}\r\n}\r\nexport function toggleSimulationPause() {\r\n\treturn this.state.simulationPaused && !this.state.simulationStopped ? this.unpause() : this.pause();\r\n}\r\nexport function stopStartSimulation() {\r\n\tif (this.state.simulationPaused && !this.state.simulationStopped) { // CONTINUE\r\n\t\tthis.toggleSimulationDialog();\r\n\t} else { \t\t\t\r\n\t\tthis.stop();\t\t\t\t\t\t// START\r\n\t\tthis.startSimulation(true);\r\n\t\tthis.setState(prevState => ({ \r\n\t\t\tclockTime: new Date(0), \r\n\t\t\tsimulationStopped: false, \r\n\t\t\tsimulationPaused: false, \r\n\t\t\tstartButtonText: \"CONTINUE SIMULATION\", \r\n\t\t\tsimulationSettingsOpen: false, \r\n\t\t\thealthy: prevState.simulationSettings[\"quantity\"] - 1, contagious: 1,\r\n\t\t\t// reset game settings\r\n\t\t\tquarantineButtonsActive: false,\r\n\t\t\tquarantineDropped: false,\r\n\t\t}));\r\n\t}\r\n}\r\nexport function simulationRestart() {\r\n\tthis.stop();\r\n\tthis.startSimulation(true);\r\n\tthis.setState(prevState => ({ clockTime: new Date(0), simulationStopped: false, simulationPaused: false, startButtonText: \"CONTINUE SIMULATION\", simulationSettingsOpen: false,\r\n\t\t\t\thealthy: prevState.simulationSettings[\"quantity\"] - 1, contagious: 1 }));\r\n}\r\nexport function setSimulationSettings(e) {\r\n\tlet targetData, parsedData;\r\n\t// triggered on event\r\n\tif (e.currentTarget) {\t\t\t\r\n\t\ttargetData = e.currentTarget.getAttribute(\"data-option\");\r\n\t\tparsedData = JSON.parse(targetData) || {};\r\n\t} else {\r\n\t\t// triggered directly from dialog\r\n\t\tparsedData = e;\r\n\t}\r\n\tthis.setState(prevState => {\r\n\t\tconst newSimulationSettings = {...prevState.simulationSettings, ...parsedData};\t\t\t\r\n\t\t// only reset simulation for size and quantity - for preview\r\n\t\tif (parsedData[\"size\"] || parsedData[\"quantity\"] || parsedData[\"speed\"]) {\r\n\t\t\tthis.stop();\r\n\t\t\tthis.startSimulation(false, newSimulationSettings);\r\n\t\t\treturn ({ simulationSettings: newSimulationSettings, clockTime: new Date(0), healthy: newSimulationSettings[\"quantity\"] - 1, \r\n\t\t\t\t\tcontagious: 1, simulationStopped: true, simulationPaused: true, startButtonText: \"START SIMULATION\" });\r\n\t\t}\r\n\t\treturn ({ simulationSettings: newSimulationSettings });\r\n\t}); \r\n}\r\n\r\nexport function toggleSimulationDialog() {\r\n\tif (this.state.isGameActive) {\r\n\t\tthis.stop();\r\n\t\t// only when clicking on navbar link -> stop game and show simulation dialog\r\n\t\tthis.setState(prevState => {\r\n\t\t\treturn ({ \r\n\t\t\t\tsimulationSettingsOpen: true, \r\n\t\t\t\tsimulationPaused: true, \r\n\t\t\t\tstartButtonText: \"START SIMULATION\",\r\n\t\t\t\tquarantineButtonsActive: false,\r\n\t\t\t\tisSimulationActive: true, \r\n\t\t\t\tisGameActive: false, \r\n\t\t\t\tgamePaused: true, \r\n\t\t\t\tgameStopped: true \r\n\t\t\t})\r\n\t\t});\r\n\t} else {\r\n\t\t// in all other cases toggle\r\n\t\tthis.toggleSimulationPause();\r\n\t\tthis.setState(prevState => {\r\n\t\t\treturn ({ \r\n\t\t\t\tsimulationSettingsOpen: !prevState.simulationSettingsOpen, \r\n\t\t\t\tsimulationPaused: !prevState.simulationPaused, \r\n\t\t\t\tstartButtonText: prevState.simulationStopped ? \"START SIMULATION\" : \"CONTINUE SIMULATION\", \r\n\t\t\t\tisSimulationActive: true, \r\n\t\t\t\tisGameActive: false, \r\n\t\t\t\tgamePaused: true, \r\n\t\t\t\tgameStopped: true \r\n\t\t\t})\r\n\t\t});\r\n\t}\r\n}","export const gameSettings = {\r\n\tisGameActive: false,\r\n\tgamePaused: true,\r\n\tgameStopped: true,\r\n\t// modals - popups\r\n\tgameSettingsOpen: false,\r\n\t// GAME\r\n\t// quarantine settings\r\n\tquarantineButtonsActive: false,\r\n\tquarantineDropped: false,\r\n\tavailableQuarantines: [],\r\n\tquarantineBeingDragged: false,\r\n\tquarantineOverlapping: false,\r\n\tdraggedQuarantine: {\r\n\t\tid: -1,\r\n\t\tx: 0,\r\n\t\ty: 0,\r\n\t},\r\n\t// game settings\r\n\tgameSettings: {\r\n\t\tmode: 0,\r\n\t\tdifficulty: 0,\r\n\t\tsize: (window.innerWidth < 800 ? 2.5 : 5),\r\n\t\tquantity: 100,\r\n\t\tspeed: 0.3,\r\n\t\tdelayInSeconds: 3,\r\n\t\tnrOfQuarantines: 5 // max 5\r\n\t}\r\n}\r\nconst resetSettings = {\r\n\tquarantineBeingDragged: false,\r\n\tquarantineOverlapping: false,\r\n\tquarantineButtonsActive: true, // change this setting\r\n\tquarantineDropped: false,\r\n\tgameSettingsOpen: false,\r\n\tgamePaused: false,\r\n\tgameStopped: false,\r\n\tdraggedQuarantine: {\r\n\t\tid: -1,\r\n\t\tx: 0,\r\n\t\ty: 0,\r\n\t},\r\n}\r\n\r\n\r\nexport function onMouseMove(e) {\t\r\n\tif (this.state.quarantineButtonsActive) {\t\t\t\r\n\t\tconst pageX = e.pageX;\r\n\t\tconst pageY = e.pageY;\r\n\t\tthis.setState(prevstate => { \r\n\t\t\treturn { draggedQuarantine: {...prevstate.draggedQuarantine, ...{ x: pageX, y: pageY }} }\r\n\t\t});\r\n\t}\t\r\n}\r\n// GAME\r\nexport function stopStartGame() {\r\n\tconsole.log(\"from stopstartgame\");\r\n\t\r\n\tif (this.state.gamePaused && !this.state.gameStopped) { // CONTINUE\r\n\t\tthis.toggleGameDialog();\r\n\t} else {\t\t\t\t\t\t\t\t// START\r\n\t\tthis.stop();\r\n\t\tthis.startGame(true);\r\n\t\tthis.setState(prevState => {\r\n\t\t\treturn {\r\n\t\t\t\tisGameActive: true,\r\n\t\t\t\tclockTime: new Date(0),\r\n\t\t\t\tstartButtonText: \"CONTINUE GAME\",\r\n\t\t\t\thealthy: prevState.gameSettings[\"quantity\"] - 1, \r\n\t\t\t\tcontagious: 1,\r\n\t\t\t\t...resetSettings\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n// TODO: not so simple\r\nexport function gameRestart() {\r\n\tthis.stop();\r\n\tthis.startGame(true);\r\n\tthis.setState(prevState => ({ \r\n\t\tclockTime: new Date(0),\r\n\t\tstartButtonText: \"CONTINUE SIMULATION\",\r\n\t\thealthy: prevState.gameSettings[\"quantity\"] - 1, \r\n\t\tcontagious: 1,\r\n\t\t...resetSettings\r\n\t}));\r\n}\r\nexport function setGameSettings(e) {\r\n\tlet targetData, parsedData;\r\n\t// triggered on event\r\n\tif (e.currentTarget) {\r\n\t\ttargetData = e.currentTarget.getAttribute(\"data-option\");\r\n\t\tparsedData = JSON.parse(targetData) || {};\r\n\t} else {\r\n\t\t// triggered directly from dialog\r\n\t\tparsedData = e;\r\n\t}\r\n\tconst newGameSettings = {...this.state.gameSettings, ...parsedData};\r\n\tconsole.log(\"parsedData\", newGameSettings);\r\n\t\r\n\tthis.setState(prevState => {\r\n\t\tthis.stop();\r\n\t\tthis.startGame(false, newGameSettings);\r\n\t\t// reset settings as you would at game start\r\n\t\treturn ({\r\n\t\t\tisGameActive: true,\r\n\t\t\tclockTime: new Date(0), \r\n\t\t\tgameSettings: newGameSettings, \r\n\t\t\thealthy: newGameSettings[\"quantity\"] - 1, \r\n\t\t\tcontagious: 1,\r\n\t\t\tstartButtonText: \"START GAME\",\r\n\t\t\t...resetSettings,\r\n\t\t\t// override reset settings after this\r\n\t\t\tgameSettingsOpen: true,\r\n\t\t\tgameStopped: true, \r\n\t\t\tgamePaused: true, \r\n\t\t});\r\n\t});\r\n}\r\nexport function setQuarantineInMotion(e) {\r\n\tconst pageX = e.pageX;\r\n\tconst pageY = e.pageY;\r\n\t// pop first value from available quarantines\t\r\n\tthis.setState(prevState => {\r\n\t\treturn {\r\n\t\t\tdraggedQuarantine: {\r\n\t\t\t\tid: prevState.availableQuarantines.slice(0,1)[0] || -1,\r\n\t\t\t\tx: pageX, \r\n\t\t\t\ty: pageY\r\n\t\t\t},\r\n\t\t\tquarantineBeingDragged: true,\r\n\t\t\tquarantineButtonsActive: true,\r\n\t\t\tquarantineDropped: false,\r\n\t\t\tavailableQuarantines: prevState.availableQuarantines.slice(1)\r\n\t\t};\r\n\t});\r\n}\r\nexport function resetDraggedQuarantineId(id) {\r\n\tthis.setState({\r\n\t\tdraggedQuarantine: {...resetSettings.draggedQuarantine}\r\n\t});\r\n}\r\nexport function setQuarantineNonactive(id) {\r\n\tthis.setState(prevState => {\r\n\t\tconst index = prevState.availableQuarantines.indexOf(id);\r\n\t\t// index about to be inactive shouldn't be in available quarantines array - so leave it be if you find it\r\n\t\tif (index > -1) {\r\n\t\t\treturn {\r\n\t\t\t\tavailableQuarantines: prevState.availableQuarantines\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\treturn {\r\n\t\t\t\tavailableQuarantines: prevState.availableQuarantines.concat(id)\r\n\t\t\t};\r\n\t\t}\r\n\t});\r\n}\r\nexport function toggleGamePause() {\r\n\treturn this.state.gamePaused && !this.state.gameStopped ? this.unpause() : this.pause();\r\n}\r\nexport function toggleGameDialog() {\r\n\tif (this.state.isSimulationActive) {\r\n\t\tthis.stop();\r\n\t\tconsole.log(\"from game dialog\");\r\n\t\t\r\n\t\t// only when clicking on navbar link -> stop simulation and show game dialog\r\n\t\tthis.setState(prevState => {\r\n\t\t\treturn ({ \r\n\t\t\t\tgameSettingsOpen: true, \r\n\t\t\t\tgamePaused: true, \r\n\t\t\t\tstartButtonText: \"START GAME\", \r\n\t\t\t\tisSimulationActive: false,\r\n\t\t\t\tisGameActive: true, \r\n\t\t\t\tsimulationPaused: true, \r\n\t\t\t\tsimulationStopped: true \r\n\t\t\t})\r\n\t\t});\r\n\t} else {\r\n\t\tthis.toggleGamePause();\r\n\t\tthis.setState(prevState => {\r\n\t\t\treturn ({ \r\n\t\t\t\tgameSettingsOpen: !prevState.gameSettingsOpen, \r\n\t\t\t\tgamePaused: !prevState.gamePaused, \r\n\t\t\t\tstartButtonText: prevState.gameStopped ? \"START GAME\" : \"CONTINUE GAME\", \r\n\t\t\t\tisSimulationActive: false, \r\n\t\t\t\tisGameActive: true, \r\n\t\t\t\tsimulationPaused: true, \r\n\t\t\t\tsimulationStopped: true \r\n\t\t\t})\r\n\t\t});\r\n\t}\r\n}","import React from \"react\";\r\nimport { clearDriftless, setDriftlessInterval } from 'driftless';\r\n\r\nimport { startSimulation, startGame, stop, pause, unPause } from \"./helpers/actions\";\r\nimport { SimulationDialog, NavBar, ShareDialog, GameDialog, QuarantineButtons } from \"./components\";\r\nimport { simulationSettings, stopStartSimulation, simulationRestart, setSimulationSettings,\r\n\ttoggleSimulationPause, toggleSimulationDialog } from \"./helpers/simulation/simulationState\";\r\nimport { gameSettings, setGameSettings, onMouseMove, stopStartGame, gameRestart,\r\n\tsetQuarantineInMotion, setQuarantineNonactive, toggleGamePause, toggleGameDialog, resetDraggedQuarantineId } from \"./helpers/game/gameState\";\r\n\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport \"./main.scss\";\r\n\r\nexport default class HomePage extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.autostart = true;\r\n\t\tthis.simulationApp = null;\r\n\t\tthis.gameApp = null;\r\n\r\n\t\tthis.state = {\r\n\t\t\t...simulationSettings,\r\n\t\t\t...gameSettings,\r\n\t\t\thasError: false,\r\n\t\t\terror: null,\r\n\t\t\t// time\r\n\t\t\tcurrentTime: new Date().getTime(),\r\n\t\t\tclockTime: new Date(0),\r\n\t\t\t// canvas state\r\n\t\t\tcontagious: 1,\r\n\t\t\thealthy: 199,\r\n\t\t\t// nav & buttons\r\n\t\t\tstartButtonText: \"CONTINUE SIMULATION\",\r\n\t\t\tisCopied: false,\r\n\t\t\tisNavbarExpanded: false,\r\n\t\t\tisNavbarVisible: true,\r\n\t\t\t// modals - popups\r\n\t\t\tshareModalOpen: false\r\n\t\t}\r\n\r\n\t\tthis.interval = null;\r\n\t\tthis.canvasWidth = window.innerWidth;\r\n\t\tthis.canvasHeight = window.innerHeight;\r\n\r\n\t\tthis.stop = stop.bind(this);\r\n\t\tthis.startSimulation = startSimulation.bind(this);\r\n\t\tthis.startGame = startGame.bind(this);\r\n\t\tthis.pause = pause.bind(this);\r\n\t\tthis.unpause = unPause.bind(this);\r\n\r\n\t\tthis.toggleDialog = this.toggleDialog.bind(this);\r\n\t\tthis.onMouseMove = onMouseMove.bind(this);\r\n\t\tthis.toggleSimulationPause = toggleSimulationPause.bind(this);\r\n\t\tthis.toggleGamePause = toggleGamePause.bind(this);\r\n\t\tthis.intervalTime = this.intervalTime.bind(this);\r\n\t\tthis.handleResize = this.handleResize.bind(this);\r\n\t\tthis.handleBlur = this.handleBlur.bind(this);\r\n\t\tthis.handleRefocus = this.handleRefocus.bind(this);\r\n\t\tthis.copyToClipboard = this.copyToClipboard.bind(this);\r\n\t\t// GAME\r\n\t\tthis.gameRestart = gameRestart.bind(this);\r\n\t\tthis.stopStartGame = stopStartGame.bind(this);\r\n\t\tthis.setGameSettings = setGameSettings.bind(this);\r\n\t\tthis.toggleGameDialog = toggleGameDialog.bind(this);\r\n\t\tthis.setQuarantineInMotion = setQuarantineInMotion.bind(this);\r\n\t\tthis.setQuarantineNonactive = setQuarantineNonactive.bind(this);\r\n\t\tthis.resetDraggedQuarantineId = resetDraggedQuarantineId.bind(this);\r\n\t\t// SIMULATION\r\n\t\tthis.simulationRestart= simulationRestart.bind(this);\r\n\t\tthis.toggleShareDialog = this.toggleShareDialog.bind(this);\r\n\t\tthis.stopStartSimulation = stopStartSimulation.bind(this);\r\n\t\tthis.setSimulationSettings = setSimulationSettings.bind(this);\r\n\t\tthis.toggleSimulationDialog = toggleSimulationDialog.bind(this);\r\n\t\tthis.toggleNavbarVisibility = this.toggleNavbarVisibility.bind(this);\r\n\t\tthis.toggleNavbarItemsExpand = this.toggleNavbarItemsExpand.bind(this);\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tthis.startSimulation(true);\r\n\t\twindow.addEventListener('resize', this.handleResize);\r\n\t\t// window.addEventListener(\"blur\", this.handleBlur);\r\n\t\t// window.addEventListener(\"focus\", this.handleRefocus);\r\n\t\tthis.interval = setDriftlessInterval(this.intervalTime, 1000);\r\n\t}\r\n\tcomponentDidCatch(error, errorInfo) {\r\n\t\t// logErrorToMyService(error, errorInfo);\r\n\t}\r\n\tstatic getDerivedStateFromError(error) {\r\n\t\t// Update state so the next render will show the fallback UI.\r\n\t\treturn { hasError: true };\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tclearDriftless(this.interval);\r\n\t\tthis.simulationApp && this.simulationApp.destroy(true);\r\n\t\tthis.gameApp && this.gameApp.destroy(true);\r\n\t}\r\n\tintervalTime() {\r\n\t\tthis.setState(prevState => {\r\n\t\t\t// in case of simulation /game either stopped or paused\r\n\t\t\tif ((this.state.isSimulationActive && (this.state.simulationPaused || this.state.simulationStopped)) ||\r\n\t\t\t\t(this.state.isGameActive && (this.state.gamePaused || this.state.gameStopped))\r\n\t\t\t) {\r\n\t\t\t\t// stop calculating currentTime because of deactivate time\r\n\t\t\t\treturn ({ currentTime: prevState.currentTime })\r\n\t\t\t}\r\n\t\t\t// if simulation / game is not paused, calculate start time a new\r\n\t\t\treturn ({ currentTime: new Date().getTime(), clockTime: new Date(prevState.clockTime.getTime() + 1000) })\r\n\t\t});\r\n\t}\r\n\thandleBlur() {\r\n\t\tif (this.state.isGameActive && !this.state.gamePaused) {\r\n\t\t\tthis.toggleDialog();\r\n\t\t}\r\n\t}\r\n\thandleRefocus() {\r\n\t\tif (this.state.isGameActive && this.state.gamePaused) {\r\n\t\t\tthis.toggleDialog();\r\n\t\t}\r\n\t}\r\n\thandleResize(e) {\r\n\t\tthis.canvasWidth = window.innerWidth < this.canvasWidth ? this.canvasWidth : window.innerWidth;\r\n\t\tthis.canvasHeight = window.innerHeight < this.canvasHeight ? this.canvasHeight : window.innerHeight;\r\n\t}\r\n\r\n\ttoggleDialog(e) {\r\n\t\tconst target = e && e.currentTarget || null;\r\n\t\t// on simulation -> show dialog\r\n\t\tif (this.state.isSimulationActive) {\r\n\t\t\tthis.toggleSimulationDialog();\r\n\t\t// on quarantineButtonsActive -> should trigger quarantineDrop - user should have quarantine attached to cursor\r\n\t\t} else if (this.state.quarantineBeingDragged && !this.state.quarantineDropped) {\r\n\t\t\t// overlap check - dont'l let the user lay quarantine down\r\n\t\t\tif (!this.state.quarantineOverlapping) {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tquarantineBeingDragged: false,\r\n\t\t\t\t\tquarantineButtonsActive: true,\r\n\t\t\t\t\tquarantineDropped: true,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.toggleGameDialog();\r\n\t\t}\r\n\t}\r\n\ttoggleShareDialog(e) {\r\n\t\tif (this.state.isSimulationActive) {\r\n\t\t\tthis.toggleSimulationPause();\r\n\t\t\tthis.setState(prevState => ({ simulationPaused: !prevState.simulationPaused, shareModalOpen: !prevState.shareModalOpen }));\r\n\t\t} else {\r\n\t\t\tthis.toggleGamePause();\r\n\t\t\tthis.setState(prevState => ({ gamePaused: !prevState.gamePaused, shareModalOpen: !prevState.shareModalOpen }));\r\n\t\t}\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.setState({ isCopied: false });\r\n\t\t}, 1000);\r\n\t}\r\n\ttoggleNavbarItemsExpand() {\r\n\t\tthis.setState(prevState => ({ isNavbarExpanded: !prevState.isNavbarExpanded}));\r\n\t}\r\n\ttoggleNavbarVisibility() {\r\n\t\tthis.setState(prevState => ({ isNavbarVisible: !prevState.isNavbarVisible}));\r\n\t}\r\n\tcopyToClipboard() {\r\n\t\tnavigator.permissions.query({name: \"clipboard-write\"})\r\n\t\t\t.then(result => {\r\n\t\t\t\tif (result.state === \"granted\" || result.state === \"prompt\") {\r\n\t\t\t\t\tnavigator.clipboard.writeText(\"https://www.covidsimulator.com\");\r\n\t\t\t\t\tthis.setState({ isCopied: true });\r\n\t\t\t\t}\r\n\t\t \t});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<section className=\"main\">\r\n\t\t\t\t<NavBar\r\n\t\t\t\t\tcurrentTime={this.state.currentTime}\r\n\t\t\t\t\tclockTime={this.state.clockTime}\r\n\t\t\t\t\ttoggleNavbarItemsExpand={this.toggleNavbarItemsExpand}\r\n\t\t\t\t\ttoggleNavbarVisibility={this.toggleNavbarVisibility}\r\n\t\t\t\t\tisNavbarExpanded={this.state.isNavbarExpanded}\r\n\t\t\t\t\tisNavbarVisible={this.state.isNavbarVisible}\r\n\t\t\t\t\ttoggleSimulationDialog={this.toggleSimulationDialog}\r\n\t\t\t\t\ttoggleShareDialog={this.toggleShareDialog}\r\n\t\t\t\t\ttoggleGameDialog={this.toggleGameDialog}\r\n\t\t\t\t\tsimulationSettings={this.state.simulationSettings}\r\n\t\t\t\t\tgameSettings={this.state.gameSettings}\r\n\t\t\t\t\tisSimulationActive={this.state.isSimulationActive}\r\n\t\t\t\t\tisGameActive={this.state.isGameActive}\r\n\t\t\t\t\tgamePaused={this.state.gamePaused}\r\n\t\t\t\t\tcontagious={this.state.contagious}\r\n\t\t\t\t\thealthy={this.state.healthy}\r\n\t\t\t\t/>\r\n\t\t\t\t<SimulationDialog\r\n\t\t\t\t\tstartSimulation={this.stopStartSimulation}\r\n\t\t\t\t\tisSimulationActive={this.state.isSimulationActive}\r\n\t\t\t\t\tisOpen={this.state.simulationSettingsOpen}\r\n\t\t\t\t\ttoggle={this.toggleSimulationDialog}\r\n\t\t\t\t\tbuttonText={this.state.startButtonText}\r\n\t\t\t\t\tsettings={this.state.simulationSettings}\r\n\t\t\t\t\tsetSimulationSettings={this.setSimulationSettings}\r\n\t\t\t\t/>\r\n\t\t\t\t<GameDialog\r\n\t\t\t\t\tstartGame={this.stopStartGame}\r\n\t\t\t\t\tisOpen={this.state.gameSettingsOpen}\r\n\t\t\t\t\tisGameActive={this.state.isGameActive}\r\n\t\t\t\t\ttoggle={this.toggleGameDialog}\r\n\t\t\t\t\tbuttonText={this.state.startButtonText}\r\n\t\t\t\t\tsettings={this.state.gameSettings}\r\n\t\t\t\t\tsetGameSettings={this.setGameSettings}\r\n\t\t\t\t/>\r\n\t\t\t\t<ShareDialog\r\n\t\t\t\t\tisOpen={this.state.shareModalOpen}\r\n\t\t\t\t\ttoggle={this.toggleShareDialog}\r\n\t\t\t\t\tcopy={this.copyToClipboard}\r\n\t\t\t\t\tisCopied={this.state.isCopied}\r\n\t\t\t\t/>\r\n\t\t\t\t<QuarantineButtons\r\n\t\t\t\t\tquarantineButtonsActive={this.state.quarantineButtonsActive}\r\n\t\t\t\t\tsetQuarantineInMotion={this.setQuarantineInMotion}\r\n\t\t\t\t/>\r\n\t\t\t\t<article\r\n\t\t\t\t\tid=\"canvas-container\"\r\n\t\t\t\t\tonClick={this.toggleDialog}\r\n\t\t\t\t\tonMouseMove={this.onMouseMove}\r\n\t\t\t\t\t>\r\n\t\t\t\t</article>\r\n\t\t\t</section>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from 'react';\r\n// import logo from './logo.svg';\r\nimport HomePage from \"./HomePage/main\";\r\n\r\nimport './App.scss';\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <HomePage />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}